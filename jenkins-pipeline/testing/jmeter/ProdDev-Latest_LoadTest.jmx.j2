<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="AddMember Physical card Input" enabled="false">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">C:\Jmeter\jakarta-jmeter-2.13\apache-jmeter-2.13\bin\WENDYS\Input\WENDYS_Addmember_Input.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">XLoyaltyIDNumber</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="GetMember Input" enabled="false">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">C:\Jmeter\jakarta-jmeter-2.13\apache-jmeter-2.13\bin\WENDYS\Input\WENDYS_GETmember_Input.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">GETAlternateID,GETPhoneNumber,GETEmail,GETLoyaltyIDCard,GETMemberID</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="UpdateMember Input" enabled="false">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">C:\Jmeter\jakarta-jmeter-2.13\apache-jmeter-2.13\bin\WENDYS\Input\WEN_UPDATEMember_Input.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">IpCode,MemberCreateDate,MemberCloseDate,MemberStatus,BirthDate,FirstName,LastName,MiddleName,NamePrefix,NameSuffix,AlternateId,Username,Password,PrimaryEmailAddress,PrimaryPhoneNumber,PrimaryPostalCode,PreferredLanguage,LastActivityDate,IsEmployee,ChangedBy,emailaddressmailable,MemberStatusCode,DirectMailOptInDate,EmailOptIn,AddressLineThree,AddressLineFour,County,Country,AddressMailable,SecondaryEmailAddress,DirectMailOptIn,EmailOptInDate,SmsOptIn,SmsDblOptInComplete,FacebookOptIn,TwitterOptIn,EnrollDate,MemberSource,SecurityQuestion,SecurityAnswer,HomeStoreID,TAndCAgreed,ZipOrPostalCode,City,HomePhone,SmsConsentChangeDate,FacebookOptInDate,TwitterOptInDate,Gender,AddressLineTwo,AddressLineOne,StateOrProvince,MobilePhoneCountryCode,MobilePhone,WorkPhone,DMA,EnrollmentStoreID</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="RewardDefids for SelectRewardchoice" enabled="false">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">C:\Jmeter\jakarta-jmeter-2.13\apache-jmeter-2.13\bin\WENDYS\Input\Rewardids_input.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">RewardID</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="ReplaceCardInput" enabled="false">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">C:\Jmeter\jakarta-jmeter-2.13\apache-jmeter-2.13\bin\WENDYS\Input\ReplaceCard_input.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">VictimCard,SurvivorCard</stringProp>
      </CSVDataSet>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables (LT_OLD)" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="                                 Variables for URLs to run against&#x9;&#x9;" elementType="Argument">
            <stringProp name="Argument.name">                                 Variables for URLs to run against		</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CurrentURL" elementType="Argument">
            <stringProp name="Argument.name">CurrentURL</stringProp>
            <stringProp name="Argument.value">LT-wenapi.brierley.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RESTURL" elementType="Argument">
            <stringProp name="Argument.name">RESTURL</stringProp>
            <stringProp name="Argument.value">10.4.12.48</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Placeholder for URLs" elementType="Argument">
            <stringProp name="Argument.name">Placeholder for URLs</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="                                       Functions used in scripts" elementType="Argument">
            <stringProp name="Argument.name">                                       Functions used in scripts</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Xcurrentdatetime" elementType="Argument">
            <stringProp name="Argument.name">Xcurrentdatetime</stringProp>
            <stringProp name="Argument.value">${__javaScript(with(new Date()) X = getFullYear() +&apos;-&apos;+ String(getMonth() + 101).substr(1) +&apos;-&apos;+ String(getDate() + 100).substr(1) +&apos;T&apos;+ String(getHours() + 100).substr(1) +&apos;:&apos;+ String(getMinutes() + 100).substr(1) +&apos;:&apos;+ String(getSeconds() + 100).substr(1), dateString)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="                                      Functions used in scripts" elementType="Argument">
            <stringProp name="Argument.name">                                      Functions used in scripts</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RandomNumber5" elementType="Argument">
            <stringProp name="Argument.name">RandomNumber5</stringProp>
            <stringProp name="Argument.value">${__Random(10000,99999)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Currentdatetime+1" elementType="Argument">
            <stringProp name="Argument.name">Currentdatetime+1</stringProp>
            <stringProp name="Argument.value">${__javaScript(with(new Date()) X = getFullYear() +&apos;-&apos;+ String(getMonth() + 101).substr(1) +&apos;-&apos;+ String(getDate() + 101).substr(1) +&apos;T&apos;+ String(getHours() + 100).substr(1) +&apos;:&apos;+ String(getMinutes() + 100).substr(1) +&apos;:&apos;+ String(getSeconds() + 100).substr(1), dateString)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_Prefix" elementType="Argument">
            <stringProp name="Argument.name">API_Prefix</stringProp>
            <stringProp name="Argument.value">/se</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Port" elementType="Argument">
            <stringProp name="Argument.name">Port</stringProp>
            <stringProp name="Argument.value">8443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ClientId" elementType="Argument">
            <stringProp name="Argument.name">ClientId</stringProp>
            <stringProp name="Argument.value">Wt3txAqgj0m8Y7PEyI0Wu0kUUyzmMi4g</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ClientSecret" elementType="Argument">
            <stringProp name="Argument.name">ClientSecret</stringProp>
            <stringProp name="Argument.value">xWoK0sGjHXaY0BI9LTeVbkh0q5hrWoua</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables (DEV)" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="                                 Variables for URLs to run against&#x9;&#x9;" elementType="Argument">
            <stringProp name="Argument.name">                                 Variables for URLs to run against		</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CurrentURL" elementType="Argument">
            <stringProp name="Argument.name">CurrentURL</stringProp>
            <stringProp name="Argument.value">LT-wenapi.brierley.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RESTURL" elementType="Argument">
            <stringProp name="Argument.name">RESTURL</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Placeholder for URLs" elementType="Argument">
            <stringProp name="Argument.name">Placeholder for URLs</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="                                       Functions used in scripts" elementType="Argument">
            <stringProp name="Argument.name">                                       Functions used in scripts</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Xcurrentdatetime" elementType="Argument">
            <stringProp name="Argument.name">Xcurrentdatetime</stringProp>
            <stringProp name="Argument.value">${__javaScript(with(new Date()) X = getFullYear() +&apos;-&apos;+ String(getMonth() + 101).substr(1) +&apos;-&apos;+ String(getDate() + 100).substr(1) +&apos;T&apos;+ String(getHours() + 100).substr(1) +&apos;:&apos;+ String(getMinutes() + 100).substr(1) +&apos;:&apos;+ String(getSeconds() + 100).substr(1), dateString)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="                                      Functions used in scripts" elementType="Argument">
            <stringProp name="Argument.name">                                      Functions used in scripts</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RandomNumber5" elementType="Argument">
            <stringProp name="Argument.name">RandomNumber5</stringProp>
            <stringProp name="Argument.value">${__Random(10000,99999)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Currentdatetime+1" elementType="Argument">
            <stringProp name="Argument.name">Currentdatetime+1</stringProp>
            <stringProp name="Argument.value">${__javaScript(with(new Date()) X = getFullYear() +&apos;-&apos;+ String(getMonth() + 101).substr(1) +&apos;-&apos;+ String(getDate() + 101).substr(1) +&apos;T&apos;+ String(getHours() + 100).substr(1) +&apos;:&apos;+ String(getMinutes() + 100).substr(1) +&apos;:&apos;+ String(getSeconds() + 100).substr(1), dateString)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_Prefix" elementType="Argument">
            <stringProp name="Argument.name">API_Prefix</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Port" elementType="Argument">
            <stringProp name="Argument.name">Port</stringProp>
            <stringProp name="Argument.value">5001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Protocol" elementType="Argument">
            <stringProp name="Argument.name">Protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="JMeterPath" elementType="Argument">
            <stringProp name="Argument.name">JMeterPath</stringProp>
            <stringProp name="Argument.value">C:\Testing\JMeter\apache-jmeter-3.3\bin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables (LT)" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="                                 Variables for URLs to run against&#x9;&#x9;" elementType="Argument">
            <stringProp name="Argument.name">                                 Variables for URLs to run against		</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CurrentURL" elementType="Argument">
            <stringProp name="Argument.name">CurrentURL</stringProp>
            <stringProp name="Argument.value">LT-wenapi.brierley.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RESTURL" elementType="Argument">
            <stringProp name="Argument.name">RESTURL</stringProp>
            <stringProp name="Argument.value">10.4.12.48</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Placeholder for URLs" elementType="Argument">
            <stringProp name="Argument.name">Placeholder for URLs</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="                                       Functions used in scripts" elementType="Argument">
            <stringProp name="Argument.name">                                       Functions used in scripts</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Xcurrentdatetime" elementType="Argument">
            <stringProp name="Argument.name">Xcurrentdatetime</stringProp>
            <stringProp name="Argument.value">${__javaScript(with(new Date()) X = getFullYear() +&apos;-&apos;+ String(getMonth() + 101).substr(1) +&apos;-&apos;+ String(getDate() + 100).substr(1) +&apos;T&apos;+ String(getHours() + 100).substr(1) +&apos;:&apos;+ String(getMinutes() + 100).substr(1) +&apos;:&apos;+ String(getSeconds() + 100).substr(1), dateString)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="                                      Functions used in scripts" elementType="Argument">
            <stringProp name="Argument.name">                                      Functions used in scripts</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RandomNumber5" elementType="Argument">
            <stringProp name="Argument.name">RandomNumber5</stringProp>
            <stringProp name="Argument.value">${__Random(10000,99999)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Currentdatetime+1" elementType="Argument">
            <stringProp name="Argument.name">Currentdatetime+1</stringProp>
            <stringProp name="Argument.value">${__javaScript(with(new Date()) X = getFullYear() +&apos;-&apos;+ String(getMonth() + 101).substr(1) +&apos;-&apos;+ String(getDate() + 101).substr(1) +&apos;T&apos;+ String(getHours() + 100).substr(1) +&apos;:&apos;+ String(getMinutes() + 100).substr(1) +&apos;:&apos;+ String(getSeconds() + 100).substr(1), dateString)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_Prefix" elementType="Argument">
            <stringProp name="Argument.name">API_Prefix</stringProp>
            <stringProp name="Argument.value">/se</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Port" elementType="Argument">
            <stringProp name="Argument.name">Port</stringProp>
            <stringProp name="Argument.value">8443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Protocol" elementType="Argument">
            <stringProp name="Argument.name">Protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="JMeterPath" elementType="Argument">
            <stringProp name="Argument.name">JMeterPath</stringProp>
            <stringProp name="Argument.value">C:\Testing\JMeter\apache-jmeter-3.3\bin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ClientId" elementType="Argument">
            <stringProp name="Argument.name">ClientId</stringProp>
            <stringProp name="Argument.value">Wt3txAqgj0m8Y7PEyI0Wu0kUUyzmMi4g</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ClientSecret" elementType="Argument">
            <stringProp name="Argument.name">ClientSecret</stringProp>
            <stringProp name="Argument.value">xWoK0sGjHXaY0BI9LTeVbkh0q5hrWoua</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables (AWS)" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="                                 Variables for URLs to run against&#x9;&#x9;" elementType="Argument">
            <stringProp name="Argument.name">                                 Variables for URLs to run against		</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CurrentURL" elementType="Argument">
            <stringProp name="Argument.name">CurrentURL</stringProp>
            <stringProp name="Argument.value">LT-wenapi.brierley.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RESTURL" elementType="Argument">
            <stringProp name="Argument.name">RESTURL</stringProp>
	    <stringProp name="Argument.value">{{ KongPublicLoadBalancerDNS }}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Placeholder for URLs" elementType="Argument">
            <stringProp name="Argument.name">Placeholder for URLs</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Functions used in scripts" elementType="Argument">
            <stringProp name="Argument.name">Functions used in scripts</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Xcurrentdatetime" elementType="Argument">
            <stringProp name="Argument.name">Xcurrentdatetime</stringProp>
            <stringProp name="Argument.value">${__javaScript(with(new Date()) X = getFullYear() +&apos;-&apos;+ String(getMonth() + 101).substr(1) +&apos;-&apos;+ String(getDate() + 100).substr(1) +&apos;T&apos;+ String(getHours() + 100).substr(1) +&apos;:&apos;+ String(getMinutes() + 100).substr(1) +&apos;:&apos;+ String(getSeconds() + 100).substr(1), dateString)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Functions used in scripts" elementType="Argument">
            <stringProp name="Argument.name">Functions used in scripts</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RandomNumber5" elementType="Argument">
            <stringProp name="Argument.name">RandomNumber5</stringProp>
            <stringProp name="Argument.value">${__Random(10000,99999)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Currentdatetime+1" elementType="Argument">
            <stringProp name="Argument.name">Currentdatetime+1</stringProp>
            <stringProp name="Argument.value">${__javaScript(with(new Date()) X = getFullYear() +&apos;-&apos;+ String(getMonth() + 101).substr(1) +&apos;-&apos;+ String(getDate() + 101).substr(1) +&apos;T&apos;+ String(getHours() + 100).substr(1) +&apos;:&apos;+ String(getMinutes() + 100).substr(1) +&apos;:&apos;+ String(getSeconds() + 100).substr(1), dateString)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_Prefix" elementType="Argument">
            <stringProp name="Argument.name">API_Prefix</stringProp>
	    <stringProp name="Argument.value">/{{ restApiPrefix }}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Port" elementType="Argument">
            <stringProp name="Argument.name">Port</stringProp>
            <stringProp name="Argument.value">8443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Protocol" elementType="Argument">
            <stringProp name="Argument.name">Protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="JMeterPath" elementType="Argument">
            <stringProp name="Argument.name">JMeterPath</stringProp>
            <stringProp name="Argument.value">C:\apache-jmeter-4.0\apache-jmeter-4.0\bin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ClientId" elementType="Argument">
            <stringProp name="Argument.name">ClientId</stringProp>
	    <stringProp name="Argument.value">{{ restKongConsumerClientId }}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ClientSecret" elementType="Argument">
            <stringProp name="Argument.name">ClientSecret</stringProp>
	    <stringProp name="Argument.value">{{ restKongConsumerClientSecret }}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RewardId" elementType="Argument">
            <stringProp name="Argument.name">RewardId</stringProp>
            <stringProp name="Argument.value">547</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables (QA)" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="                                 Variables for URLs to run against&#x9;&#x9;" elementType="Argument">
            <stringProp name="Argument.name">                                 Variables for URLs to run against		</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CurrentURL" elementType="Argument">
            <stringProp name="Argument.name">CurrentURL</stringProp>
            <stringProp name="Argument.value">LT-wenapi.brierley.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RESTURL" elementType="Argument">
            <stringProp name="Argument.name">RESTURL</stringProp>
            <stringProp name="Argument.value">10.4.11.78</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Placeholder for URLs" elementType="Argument">
            <stringProp name="Argument.name">Placeholder for URLs</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="                                       Functions used in scripts" elementType="Argument">
            <stringProp name="Argument.name">                                       Functions used in scripts</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Xcurrentdatetime" elementType="Argument">
            <stringProp name="Argument.name">Xcurrentdatetime</stringProp>
            <stringProp name="Argument.value">${__javaScript(with(new Date()) X = getFullYear() +&apos;-&apos;+ String(getMonth() + 101).substr(1) +&apos;-&apos;+ String(getDate() + 100).substr(1) +&apos;T&apos;+ String(getHours() + 100).substr(1) +&apos;:&apos;+ String(getMinutes() + 100).substr(1) +&apos;:&apos;+ String(getSeconds() + 100).substr(1), dateString)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="                                      Functions used in scripts" elementType="Argument">
            <stringProp name="Argument.name">                                      Functions used in scripts</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RandomNumber5" elementType="Argument">
            <stringProp name="Argument.name">RandomNumber5</stringProp>
            <stringProp name="Argument.value">${__Random(10000,99999)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Currentdatetime+1" elementType="Argument">
            <stringProp name="Argument.name">Currentdatetime+1</stringProp>
            <stringProp name="Argument.value">${__javaScript(with(new Date()) X = getFullYear() +&apos;-&apos;+ String(getMonth() + 101).substr(1) +&apos;-&apos;+ String(getDate() + 101).substr(1) +&apos;T&apos;+ String(getHours() + 100).substr(1) +&apos;:&apos;+ String(getMinutes() + 100).substr(1) +&apos;:&apos;+ String(getSeconds() + 100).substr(1), dateString)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_Prefix" elementType="Argument">
            <stringProp name="Argument.name">API_Prefix</stringProp>
            <stringProp name="Argument.value">/lod-minor</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Port" elementType="Argument">
            <stringProp name="Argument.name">Port</stringProp>
            <stringProp name="Argument.value">8443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Protocol" elementType="Argument">
            <stringProp name="Argument.name">Protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="JMeterPath" elementType="Argument">
            <stringProp name="Argument.name">JMeterPath</stringProp>
            <stringProp name="Argument.value">C:\Testing\JMeter\apache-jmeter-3.3\bin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ClientId" elementType="Argument">
            <stringProp name="Argument.name">ClientId</stringProp>
            <stringProp name="Argument.value">116eb1e753aa4cafbe382bf2359f3a8f</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ClientSecret" elementType="Argument">
            <stringProp name="Argument.name">ClientSecret</stringProp>
            <stringProp name="Argument.value">231bbc92870c417f925d52cea3e3a03d</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Auth (LT)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1515800719000</longProp>
        <longProp name="ThreadGroup.end_time">1515800719000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">28800</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /auth/token" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientId&quot;: &quot;${ClientId}&quot;,&#xd;
  &quot;clientSecret&quot;: &quot;${ClientSecret}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
          <stringProp name="HTTPSampler.port">${Port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/auth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Access Token Extractor" enabled="true">
            <stringProp name="TestPlan.comments">	</stringProp>
            <stringProp name="JSONPostProcessor.referenceNames">accessToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accessToken</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">${__setProperty(accessToken, ${accessToken})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="TestPlan.comments">Sets error count property to 0</stringProp>
          <stringProp name="BeanShellSampler.query">props.setProperty(&quot;ERROR_COUNT&quot;,&quot;0&quot;);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
      </hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp New CSV" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1523483130000</longProp>
        <longProp name="ThreadGroup.end_time">1523483130000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Initialize TestMember CSV" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">FileWriter fstream = new FileWriter(&quot;testmembers.csv&quot;); //Create New file with name &quot;subid&quot;
BufferedWriter out = new BufferedWriter(fstream);

out.write(&quot;MEMBERIDCSV&quot;);//write value of variable 1

out.write(&quot;,&quot;);

out.write(&quot;ALTERNATEIDCSV&quot;);//write value of variable 2

out.write(&quot;,&quot;);

out.write(&quot;CARDNUMBERCSV&quot;);//write value of variable 2

out.write(&quot;,&quot;);

out.write(&quot;VCKEYCSV&quot;);//write value of variable 2

out.write(System.getProperty(&quot;line.separator&quot;));//insert new line

out.close();
fstream.close();</stringProp>
        </JSR223Sampler>
        <hashTree/>
      </hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Members" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1523479671000</longProp>
        <longProp name="ThreadGroup.end_time">1523479671000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Unique User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="132835675">firstName</stringProp>
            <stringProp name="-818219584">middleName</stringProp>
            <stringProp name="-1459599807">lastName</stringProp>
            <stringProp name="106642798">phone</stringProp>
            <stringProp name="-265713450">username</stringProp>
            <stringProp name="96619420">email</stringProp>
            <stringProp name="-196799691">alternateId</stringProp>
            <stringProp name="-1367605173">cardId</stringProp>
            <stringProp name="-1299765226">email2</stringProp>
            <stringProp name="-1805823075">alternateId2</stringProp>
            <stringProp name="553912647">cardId2</stringProp>
            <stringProp name="352817692">username2</stringProp>
            <stringProp name="-1299765225">email3</stringProp>
            <stringProp name="-1805823074">alternateId3</stringProp>
            <stringProp name="553912648">cardId3</stringProp>
            <stringProp name="352817693">username3</stringProp>
            <stringProp name="-1299765224">email4</stringProp>
            <stringProp name="-1805823073">alternateId4</stringProp>
            <stringProp name="553912649">cardId4</stringProp>
            <stringProp name="352817694">username4</stringProp>
            <stringProp name="-1299765223">email5</stringProp>
            <stringProp name="-1805823072">alternateId5</stringProp>
            <stringProp name="553912650">cardId5</stringProp>
            <stringProp name="352817695">username5</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="908532706">
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1590862323">${__Random(1000000000,9999999999)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members (with card)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;birthDate&quot;: &quot;2017-07-19T16:20:42.7719+00:00&quot;,&#xd;
&quot;changedBy&quot;: &quot;REST Test&quot;,&#xd;
&quot;firstName&quot;: &quot;${firstName}&quot;,&#xd;
&quot;isEmployee&quot;: false,&#xd;
&quot;lastName&quot;: &quot;${lastName}&quot;,&#xd;
&quot;memberStatus&quot;: &quot;Active&quot;,&#xd;
&quot;middleName&quot;: &quot;&quot;,&#xd;
&quot;password&quot;: &quot;Password123&amp;&quot;,&#xd;
&quot;passwordExpireDate&quot;: &quot;2017-10-17&quot;,&#xd;
&quot;preferredLanguage&quot;: &quot;en&quot;,&#xd;
&quot;zipCode&quot;: &quot;75124&quot;,&#xd;
&quot;username&quot;: &quot;${username2}&quot;,&#xd;
&quot;email&quot;: &quot;${email2}&quot;,&#xd;
&quot;alternateId&quot;: &quot;${alternateId2}&quot;,&#xd;
&quot;cards&quot;: [&#xd;
  {&#xd;
    &quot;isPrimary&quot;: true,&#xd;
    &quot;cardNumber&quot;: &quot;${cardId2}&quot;,&#xd;
    &quot;cardType&quot;: 1&#xd;
  }&#xd;
]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
          <stringProp name="HTTPSampler.port">${Port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Member Property Extractor" enabled="true">
            <stringProp name="TestPlan.comments">	</stringProp>
            <stringProp name="JSONPostProcessor.referenceNames">memberId; alternateId; cardNumber; vckey</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id; $.data.alternateId; $.data.cards[0].cardNumber; $.data.cards[0].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default; No_Default; No_Default; No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Write TestMember CSV Record" enabled="true">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">FileWriter fstream = new FileWriter(&quot;testmembers.csv&quot;,true); //Create New file with name &quot;subid&quot;

BufferedWriter out = new BufferedWriter(fstream);

out.write(vars.get(&quot;memberId&quot;));//write value of variable 1

out.write(&quot;,&quot;);

out.write(vars.get(&quot;alternateId&quot;));//write value of variable 2

out.write(&quot;,&quot;);

out.write(vars.get(&quot;cardNumber&quot;));//write value of variable 3

out.write(&quot;,&quot;);

out.write(vars.get(&quot;vckey&quot;));//write value of variable 4

out.write(System.getProperty(&quot;line.separator&quot;));//insert new line

out.close();
fstream.close();</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
      </hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="clear Setup Aggregate &amp; Results" enabled="true">
        <stringProp name="TestPlan.comments">This is to clear the aggregate &amp; results for the setup thread tasks, so that they don&apos;t interfere with final throughput results</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1527023143000</longProp>
        <longProp name="ThreadGroup.end_time">1527023143000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">import org.apache.jmeter.gui.GuiPackage;
import org.apache.jmeter.gui.JMeterGUIComponent;
import org.apache.jmeter.gui.tree.JMeterTreeNode;
import org.apache.jmeter.samplers.Clearable;
import org.apache.jmeter.visualizers.StatVisualizer;
import org.apache.jmeter.visualizers.ViewResultsFullVisualizer;

log.info(&quot;Clearing All ...&quot;);

guiPackage = GuiPackage.getInstance();

guiPackage.getMainFrame().clearData();
for (JMeterTreeNode node : guiPackage.getTreeModel().getNodesOfType(Clearable.class)) {
    JMeterGUIComponent guiComp = guiPackage.getGui(node.getTestElement());
    if (guiComp instanceof Clearable){
        Clearable item = (Clearable) guiComp;
        if(item instanceof StatVisualizer || item instanceof ViewResultsFullVisualizer)
        {
	        try {
	            item.clearData();
	        } catch (Exception ex) {
	            log.error(&quot;Can&apos;t clear: &quot;+node+&quot; &quot;+guiComp, ex);
	        }
        }
    }
}</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Auth Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1515800773000</longProp>
        <longProp name="ThreadGroup.end_time">1515800773000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">28800</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Periodic Auth Thread" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /auth/token" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;clientId&quot;: &quot;${ClientId}&quot;,&#xd;
  &quot;clientSecret&quot;: &quot;${ClientSecret}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/auth/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Access Token Extractor" enabled="true">
              <stringProp name="TestPlan.comments">	</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">accessToken</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accessToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
              <stringProp name="Scope.variable"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(accessToken, ${accessToken})};</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">300000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TCP-like Test TC1" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">40</stringProp>
        <stringProp name="ThreadGroup.ramp_time">30</stringProp>
        <longProp name="ThreadGroup.start_time">1515862107000</longProp>
        <longProp name="ThreadGroup.end_time">1515862107000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">3600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">${JMeterPath}\testmembers.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">memberidcsv,alternateidcsv,cardnumbercsv,vckeycsv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Unique User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="132835675">firstName</stringProp>
            <stringProp name="-818219584">middleName</stringProp>
            <stringProp name="-1459599807">lastName</stringProp>
            <stringProp name="106642798">phone</stringProp>
            <stringProp name="-265713450">username</stringProp>
            <stringProp name="96619420">email</stringProp>
            <stringProp name="-196799691">alternateId</stringProp>
            <stringProp name="-1367605173">cardId</stringProp>
            <stringProp name="-1299765226">email2</stringProp>
            <stringProp name="-1805823075">alternateId2</stringProp>
            <stringProp name="553912647">cardId2</stringProp>
            <stringProp name="352817692">username2</stringProp>
            <stringProp name="-1299765225">email3</stringProp>
            <stringProp name="-1805823074">alternateId3</stringProp>
            <stringProp name="553912648">cardId3</stringProp>
            <stringProp name="352817693">username3</stringProp>
            <stringProp name="-1299765224">email4</stringProp>
            <stringProp name="-1805823073">alternateId4</stringProp>
            <stringProp name="553912649">cardId4</stringProp>
            <stringProp name="352817694">username4</stringProp>
            <stringProp name="-1299765223">email5</stringProp>
            <stringProp name="-1805823072">alternateId5</stringProp>
            <stringProp name="553912650">cardId5</stringProp>
            <stringProp name="352817695">username5</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="908532706">
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1590862323">${__Random(1000000000,9999999999)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">if(prev.getErrorCount()==0){
	return;
}

String oldCountAsString = props.getProperty(&quot;ERROR_COUNT&quot;);
int count = 0;
synchronized(props){
	count = Integer.parseInt(oldCountAsString) + 1;
	props.setProperty(&quot;ERROR_COUNT&quot;, Integer.toString(count));
	if(count == 500)
	{
		prev.setStopTest(true);
	}
}
</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
        <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="bzm - Weighted Switch Controller" enabled="true">
          <collectionProp name="Weights">
            <collectionProp name="1982441745">
              <stringProp name="1268948242">(POST) /loyalty/cardTransactions [e-commerce Simulation]</stringProp>
              <stringProp name="1820">95</stringProp>
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <collectionProp name="458823807">
              <stringProp name="1899957185">(POST) /loyalty/cardTransactions [e-commerce]</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <collectionProp name="1695808895">
              <stringProp name="161326887">(POST) /loyalty/cardTransactions [pos1]</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <collectionProp name="1722328651">
              <stringProp name="161326918">(POST) /loyalty/cardTransactions [pos2]</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <collectionProp name="1725700800">
              <stringProp name="161326949">(POST) /loyalty/cardTransactions [pos3]</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <collectionProp name="1729819646">
              <stringProp name="161326980">(POST) /loyalty/cardTransactions [pos4]</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
          </collectionProp>
        </com.blazemeter.jmeter.control.WeightedSwitchController>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomSimulationSku" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);

if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku&quot;,&quot;1111&quot;);
}
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Simulation Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1760534389">itemNumber1</stringProp>
              <stringProp name="1760534390">itemNumber2</stringProp>
              <stringProp name="1760534391">itemNumber3</stringProp>
              <stringProp name="1760534392">itemNumber4</stringProp>
              <stringProp name="1760534393">itemNumber5</stringProp>
              <stringProp name="1760534394">itemNumber6</stringProp>
              <stringProp name="1760534395">itemNumber7</stringProp>
              <stringProp name="1760534396">itemNumber8</stringProp>
              <stringProp name="2116183651">itemId1</stringProp>
              <stringProp name="2116183652">itemId2</stringProp>
              <stringProp name="2116183653">itemId3</stringProp>
              <stringProp name="2116183654">itemId4</stringProp>
              <stringProp name="2116183655">itemId5</stringProp>
              <stringProp name="2116183656">itemId6</stringProp>
              <stringProp name="2116183657">itemId7</stringProp>
              <stringProp name="2116183658">itemId8</stringProp>
              <stringProp name="705561746">saleAmount1</stringProp>
              <stringProp name="705561747">saleAmount2</stringProp>
              <stringProp name="705561748">saleAmount3</stringProp>
              <stringProp name="705561749">saleAmount4</stringProp>
              <stringProp name="705561750">saleAmount5</stringProp>
              <stringProp name="705561751">saleAmount6</stringProp>
              <stringProp name="705561752">saleAmount7</stringProp>
              <stringProp name="705561753">saleAmount8</stringProp>
              <stringProp name="1042087326">posSaleAmount1</stringProp>
              <stringProp name="1042087327">posSaleAmount2</stringProp>
              <stringProp name="1042087328">posSaleAmount3</stringProp>
              <stringProp name="1042087329">posSaleAmount4</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1956770559">
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [e-commerce Simulation]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1}&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}&amp;saveOptions.executionMode=simulation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="448240793">transactionId</stringProp>
                <stringProp name="-1304193265">tenderId</stringProp>
                <stringProp name="1262524332">transactionDate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-2002654281">
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [e-commerce]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},    &#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1}&#xd;
    }  &#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="448240793">transactionId</stringProp>
                <stringProp name="-1304193265">tenderId</stringProp>
                <stringProp name="1262524332">transactionDate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-2002654281">
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [pos1]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},    &#xd;
    &quot;retailAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)}&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="448240793">transactionId</stringProp>
                <stringProp name="-1304193265">tenderId</stringProp>
                <stringProp name="1262524332">transactionDate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-2002654281">
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [pos2]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},    &#xd;
    &quot;retailAmount&quot;: ${posSaleAmount2},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)}&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="448240793">transactionId</stringProp>
                <stringProp name="-1304193265">tenderId</stringProp>
                <stringProp name="1262524332">transactionDate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-2002654281">
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [pos3]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},    &#xd;
    &quot;retailAmount&quot;: ${posSaleAmount3},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)}&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="448240793">transactionId</stringProp>
                <stringProp name="-1304193265">tenderId</stringProp>
                <stringProp name="1262524332">transactionDate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-2002654281">
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [pos4]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},    &#xd;
    &quot;retailAmount&quot;: ${posSaleAmount4},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount4},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)}&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="448240793">transactionId</stringProp>
                <stringProp name="-1304193265">tenderId</stringProp>
                <stringProp name="1262524332">transactionDate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-2002654281">
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TCP-like Test TC2" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">40</stringProp>
        <stringProp name="ThreadGroup.ramp_time">30</stringProp>
        <longProp name="ThreadGroup.start_time">1515862107000</longProp>
        <longProp name="ThreadGroup.end_time">1515862107000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">3600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">${JMeterPath}\testmembers.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">memberidcsv,cardnumbercsv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Unique User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="132835675">firstName</stringProp>
            <stringProp name="-818219584">middleName</stringProp>
            <stringProp name="-1459599807">lastName</stringProp>
            <stringProp name="106642798">phone</stringProp>
            <stringProp name="-265713450">username</stringProp>
            <stringProp name="96619420">email</stringProp>
            <stringProp name="-196799691">alternateId</stringProp>
            <stringProp name="-1367605173">cardId</stringProp>
            <stringProp name="-1299765226">email2</stringProp>
            <stringProp name="-1805823075">alternateId2</stringProp>
            <stringProp name="553912647">cardId2</stringProp>
            <stringProp name="352817692">username2</stringProp>
            <stringProp name="-1299765225">email3</stringProp>
            <stringProp name="-1805823074">alternateId3</stringProp>
            <stringProp name="553912648">cardId3</stringProp>
            <stringProp name="352817693">username3</stringProp>
            <stringProp name="-1299765224">email4</stringProp>
            <stringProp name="-1805823073">alternateId4</stringProp>
            <stringProp name="553912649">cardId4</stringProp>
            <stringProp name="352817694">username4</stringProp>
            <stringProp name="-1299765223">email5</stringProp>
            <stringProp name="-1805823072">alternateId5</stringProp>
            <stringProp name="553912650">cardId5</stringProp>
            <stringProp name="352817695">username5</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="908532706">
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1590862323">${__Random(1000000000,9999999999)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">if(prev.getErrorCount()==0){
	return;
}

String oldCountAsString = props.getProperty(&quot;ERROR_COUNT&quot;);
int count = 0;
synchronized(props){
	count = Integer.parseInt(oldCountAsString) + 1;
	props.setProperty(&quot;ERROR_COUNT&quot;, Integer.toString(count));
	if(count == 500)
	{
		prev.setStopTest(true);
	}
}
</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
        <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="bzm - Weighted Switch Controller" enabled="true">
          <collectionProp name="Weights">
            <collectionProp name="1982441745">
              <stringProp name="1268948242">(POST) /loyalty/cardTransactions [e-commerce Simulation]</stringProp>
              <stringProp name="1820">95</stringProp>
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <collectionProp name="458823807">
              <stringProp name="1899957185">(POST) /loyalty/cardTransactions [e-commerce]</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <collectionProp name="1695808895">
              <stringProp name="161326887">(POST) /loyalty/cardTransactions [pos1]</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <collectionProp name="1722328651">
              <stringProp name="161326918">(POST) /loyalty/cardTransactions [pos2]</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <collectionProp name="1725700800">
              <stringProp name="161326949">(POST) /loyalty/cardTransactions [pos3]</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <collectionProp name="1729819646">
              <stringProp name="161326980">(POST) /loyalty/cardTransactions [pos4]</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
          </collectionProp>
        </com.blazemeter.jmeter.control.WeightedSwitchController>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomSimulationSku" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku1&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku1&quot;,&quot;1111&quot;);
}


chance = randomGenerator.nextInt(1000);
if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku2&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku2&quot;,&quot;1111&quot;);
}

chance = randomGenerator.nextInt(1000);
if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku3&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku3&quot;,&quot;1111&quot;);
}

chance = randomGenerator.nextInt(1000);
if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku4&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku4&quot;,&quot;1111&quot;);
}

chance = randomGenerator.nextInt(1000);
if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku5&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku5&quot;,&quot;1111&quot;);
}

chance = randomGenerator.nextInt(1000);
if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku6&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku6&quot;,&quot;1111&quot;);
}

chance = randomGenerator.nextInt(1000);
if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku7&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku7&quot;,&quot;1111&quot;);
}

chance = randomGenerator.nextInt(1000);
if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku8&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku8&quot;,&quot;1111&quot;);
}</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Simulation Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1760534389">itemNumber1</stringProp>
              <stringProp name="1760534390">itemNumber2</stringProp>
              <stringProp name="1760534391">itemNumber3</stringProp>
              <stringProp name="1760534392">itemNumber4</stringProp>
              <stringProp name="1760534393">itemNumber5</stringProp>
              <stringProp name="1760534394">itemNumber6</stringProp>
              <stringProp name="1760534395">itemNumber7</stringProp>
              <stringProp name="1760534396">itemNumber8</stringProp>
              <stringProp name="2116183651">itemId1</stringProp>
              <stringProp name="2116183652">itemId2</stringProp>
              <stringProp name="2116183653">itemId3</stringProp>
              <stringProp name="2116183654">itemId4</stringProp>
              <stringProp name="2116183655">itemId5</stringProp>
              <stringProp name="2116183656">itemId6</stringProp>
              <stringProp name="2116183657">itemId7</stringProp>
              <stringProp name="2116183658">itemId8</stringProp>
              <stringProp name="705561746">saleAmount1</stringProp>
              <stringProp name="705561747">saleAmount2</stringProp>
              <stringProp name="705561748">saleAmount3</stringProp>
              <stringProp name="705561749">saleAmount4</stringProp>
              <stringProp name="705561750">saleAmount5</stringProp>
              <stringProp name="705561751">saleAmount6</stringProp>
              <stringProp name="705561752">saleAmount7</stringProp>
              <stringProp name="705561753">saleAmount8</stringProp>
              <stringProp name="1042087326">posSaleAmount1</stringProp>
              <stringProp name="1042087327">posSaleAmount2</stringProp>
              <stringProp name="1042087328">posSaleAmount3</stringProp>
              <stringProp name="1042087329">posSaleAmount4</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1956770559">
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [e-commerce Simulation]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId3}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount3},&#xd;
    &quot;saleAmount&quot;: ${saleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber3},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku3}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId4}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount4},&#xd;
    &quot;saleAmount&quot;: ${saleAmount4},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber4},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku4}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId5}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount5},&#xd;
    &quot;saleAmount&quot;: ${saleAmount5},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber5},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku5}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId6}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount6},&#xd;
    &quot;saleAmount&quot;: ${saleAmount6},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber6},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku6}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId7}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount7},&#xd;
    &quot;saleAmount&quot;: ${saleAmount7},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber7},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku7}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId8}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount8},&#xd;
    &quot;saleAmount&quot;: ${saleAmount8},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber8},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku8}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}&amp;saveOptions.executionMode=simulation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="448240793">transactionId</stringProp>
                <stringProp name="-1304193265">tenderId</stringProp>
                <stringProp name="1262524332">transactionDate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-339514408">
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [e-commerce]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId3}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount3},&#xd;
    &quot;saleAmount&quot;: ${saleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber3},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku3}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId4}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount4},&#xd;
    &quot;saleAmount&quot;: ${saleAmount4},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber4},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku4}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId5}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount5},&#xd;
    &quot;saleAmount&quot;: ${saleAmount5},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber5},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku5}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId6}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount6},&#xd;
    &quot;saleAmount&quot;: ${saleAmount6},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber6},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku6}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId7}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount7},&#xd;
    &quot;saleAmount&quot;: ${saleAmount7},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber7},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku7}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId8}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount8},&#xd;
    &quot;saleAmount&quot;: ${saleAmount8},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber8},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku8}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="448240793">transactionId</stringProp>
                <stringProp name="-1304193265">tenderId</stringProp>
                <stringProp name="1262524332">transactionDate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-339514408">
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [pos1]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;retailAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)},&#xd;
    &quot;plu&quot;:&quot;${random_sku}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="448240793">transactionId</stringProp>
                <stringProp name="-1304193265">tenderId</stringProp>
                <stringProp name="1262524332">transactionDate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-339514408">
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [pos2]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;retailAmount&quot;: ${posSaleAmount2},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)},&#xd;
    &quot;plu&quot;:&quot;${random_sku}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="448240793">transactionId</stringProp>
                <stringProp name="-1304193265">tenderId</stringProp>
                <stringProp name="1262524332">transactionDate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-339514408">
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [pos3]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;retailAmount&quot;: ${posSaleAmount3},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)},&#xd;
    &quot;plu&quot;:&quot;${random_sku}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="448240793">transactionId</stringProp>
                <stringProp name="-1304193265">tenderId</stringProp>
                <stringProp name="1262524332">transactionDate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-339514408">
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [pos4]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;retailAmount&quot;: ${posSaleAmount4},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount4},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)},&#xd;
    &quot;plu&quot;:&quot;${random_sku}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
            <stringProp name="HTTPSampler.port">${Port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="448240793">transactionId</stringProp>
                <stringProp name="-1304193265">tenderId</stringProp>
                <stringProp name="1262524332">transactionDate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-339514408">
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TCP-like Test TC3" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">40</stringProp>
        <stringProp name="ThreadGroup.ramp_time">30</stringProp>
        <longProp name="ThreadGroup.start_time">1515862107000</longProp>
        <longProp name="ThreadGroup.end_time">1515862107000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">3600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">C:\Users\rpillai.BRIERLEY\DevRoot\DB Scripts\members5.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">memberidcsv,alternateidcsv,vckeycsv,cardnumbercsv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Unique User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="132835675">firstName</stringProp>
            <stringProp name="-818219584">middleName</stringProp>
            <stringProp name="-1459599807">lastName</stringProp>
            <stringProp name="106642798">phone</stringProp>
            <stringProp name="-265713450">username</stringProp>
            <stringProp name="96619420">email</stringProp>
            <stringProp name="-196799691">alternateId</stringProp>
            <stringProp name="-1367605173">cardId</stringProp>
            <stringProp name="-1299765226">email2</stringProp>
            <stringProp name="-1805823075">alternateId2</stringProp>
            <stringProp name="553912647">cardId2</stringProp>
            <stringProp name="352817692">username2</stringProp>
            <stringProp name="-1299765225">email3</stringProp>
            <stringProp name="-1805823074">alternateId3</stringProp>
            <stringProp name="553912648">cardId3</stringProp>
            <stringProp name="352817693">username3</stringProp>
            <stringProp name="-1299765224">email4</stringProp>
            <stringProp name="-1805823073">alternateId4</stringProp>
            <stringProp name="553912649">cardId4</stringProp>
            <stringProp name="352817694">username4</stringProp>
            <stringProp name="-1299765223">email5</stringProp>
            <stringProp name="-1805823072">alternateId5</stringProp>
            <stringProp name="553912650">cardId5</stringProp>
            <stringProp name="352817695">username5</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="908532706">
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1590862323">${__Random(1000000000,9999999999)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">if(prev.getErrorCount()==0){
	return;
}

String oldCountAsString = props.getProperty(&quot;ERROR_COUNT&quot;);
int count = 0;
synchronized(props){
	count = Integer.parseInt(oldCountAsString) + 1;
	props.setProperty(&quot;ERROR_COUNT&quot;, Integer.toString(count));
	if(count == 500)
	{
		prev.setStopTest(true);
	}
}
</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
        <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="bzm - Weighted Switch Controller" enabled="true">
          <collectionProp name="Weights">
            <collectionProp name="1982415302">
              <stringProp name="1268948242">(POST) /loyalty/cardTransactions [e-commerce Simulation]</stringProp>
              <stringProp name="1818">93</stringProp>
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <collectionProp name="458850250">
              <stringProp name="1899957185">(POST) /loyalty/cardTransactions [e-commerce]</stringProp>
              <stringProp name="51">3</stringProp>
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <collectionProp name="-274519731">
              <stringProp name="-133343198">(POST) /loyalty/cardTransactions [pos]</stringProp>
              <stringProp name="52">4</stringProp>
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
          </collectionProp>
        </com.blazemeter.jmeter.control.WeightedSwitchController>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomSimulationSku" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance2 &lt; 200)
{
	vars.put(&quot;random_sim_currency&quot;,&quot;PLCC&quot;);
}
else
{
	vars.put(&quot;random_sim_currency&quot;,&quot;dollars&quot;);
}

if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku1&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku1&quot;,&quot;1111&quot;);
}


chance = randomGenerator.nextInt(1000);
if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku2&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku2&quot;,&quot;1111&quot;);
}

chance = randomGenerator.nextInt(1000);
if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku3&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku3&quot;,&quot;1111&quot;);
}

chance = randomGenerator.nextInt(1000);
if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku4&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku4&quot;,&quot;1111&quot;);
}

chance = randomGenerator.nextInt(1000);
if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku5&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku5&quot;,&quot;1111&quot;);
}

chance = randomGenerator.nextInt(1000);
if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku6&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku6&quot;,&quot;1111&quot;);
}

chance = randomGenerator.nextInt(1000);
if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku7&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku7&quot;,&quot;1111&quot;);
}

chance = randomGenerator.nextInt(1000);
if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku8&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku8&quot;,&quot;1111&quot;);
}
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Simulation Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1760534389">itemNumber1</stringProp>
              <stringProp name="1760534390">itemNumber2</stringProp>
              <stringProp name="1760534391">itemNumber3</stringProp>
              <stringProp name="1760534392">itemNumber4</stringProp>
              <stringProp name="1760534393">itemNumber5</stringProp>
              <stringProp name="1760534394">itemNumber6</stringProp>
              <stringProp name="1760534395">itemNumber7</stringProp>
              <stringProp name="1760534396">itemNumber8</stringProp>
              <stringProp name="2116183651">itemId1</stringProp>
              <stringProp name="2116183652">itemId2</stringProp>
              <stringProp name="2116183653">itemId3</stringProp>
              <stringProp name="2116183654">itemId4</stringProp>
              <stringProp name="2116183655">itemId5</stringProp>
              <stringProp name="2116183656">itemId6</stringProp>
              <stringProp name="2116183657">itemId7</stringProp>
              <stringProp name="2116183658">itemId8</stringProp>
              <stringProp name="705561746">saleAmount1</stringProp>
              <stringProp name="705561747">saleAmount2</stringProp>
              <stringProp name="705561748">saleAmount3</stringProp>
              <stringProp name="705561749">saleAmount4</stringProp>
              <stringProp name="705561750">saleAmount5</stringProp>
              <stringProp name="705561751">saleAmount6</stringProp>
              <stringProp name="705561752">saleAmount7</stringProp>
              <stringProp name="705561753">saleAmount8</stringProp>
              <stringProp name="1042087326">posSaleAmount1</stringProp>
              <stringProp name="1042087327">posSaleAmount2</stringProp>
              <stringProp name="1042087328">posSaleAmount3</stringProp>
              <stringProp name="1042087329">posSaleAmount4</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1956770559">
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="(POST) /loyalty/cardTransactions [e-commerce Simulation]" enabled="true">
            <collectionProp name="Weights">
              <collectionProp name="-1885231367">
                <stringProp name="39575203">(POST) /loyalty/cardTransactions 1 [e-commerce Simulation]</stringProp>
                <stringProp name="1567">10</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-381882602">
                <stringProp name="-2037634140">(POST) /loyalty/cardTransactions 2 [e-commerce Simulation]</stringProp>
                <stringProp name="1598">20</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1803197895">
                <stringProp name="180123813">(POST) /loyalty/cardTransactions 3 [e-commerce Simulation]</stringProp>
                <stringProp name="1629">30</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1415254446">
                <stringProp name="-1897085530">(POST) /loyalty/cardTransactions 4 [e-commerce Simulation]</stringProp>
                <stringProp name="1598">20</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="358336222">
                <stringProp name="320672423">(POST) /loyalty/cardTransactions 5 [e-commerce Simulation]</stringProp>
                <stringProp name="1567">10</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1473930622">
                <stringProp name="-1756536920">(POST) /loyalty/cardTransactions 6 [e-commerce Simulation]</stringProp>
                <stringProp name="53">5</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1101718794">
                <stringProp name="461221033">(POST) /loyalty/cardTransactions 7 [e-commerce Simulation]</stringProp>
                <stringProp name="51">3</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1477667710">
                <stringProp name="-1615988310">(POST) /loyalty/cardTransactions 8 [e-commerce Simulation]</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 1 [e-commerce Simulation]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}&amp;saveOptions.executionMode=simulation</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 2 [e-commerce Simulation]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}&amp;saveOptions.executionMode=simulation</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 3 [e-commerce Simulation]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId3}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount3},&#xd;
    &quot;saleAmount&quot;: ${saleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber3},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku3}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}&amp;saveOptions.executionMode=simulation</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 4 [e-commerce Simulation]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId3}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount3},&#xd;
    &quot;saleAmount&quot;: ${saleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber3},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku3}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId4}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount4},&#xd;
    &quot;saleAmount&quot;: ${saleAmount4},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber4},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku4}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}&amp;saveOptions.executionMode=simulation</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 5 [e-commerce Simulation]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId3}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount3},&#xd;
    &quot;saleAmount&quot;: ${saleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber3},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku3}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId4}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount4},&#xd;
    &quot;saleAmount&quot;: ${saleAmount4},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber4},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku4}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId5}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount5},&#xd;
    &quot;saleAmount&quot;: ${saleAmount5},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber5},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku5}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}&amp;saveOptions.executionMode=simulation</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 6 [e-commerce Simulation]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId3}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount3},&#xd;
    &quot;saleAmount&quot;: ${saleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber3},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku3}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId4}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount4},&#xd;
    &quot;saleAmount&quot;: ${saleAmount4},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber4},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku4}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId5}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount5},&#xd;
    &quot;saleAmount&quot;: ${saleAmount5},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber5},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku5}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId6}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount6},&#xd;
    &quot;saleAmount&quot;: ${saleAmount6},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber6},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku6}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}&amp;saveOptions.executionMode=simulation</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 7 [e-commerce Simulation]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId3}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount3},&#xd;
    &quot;saleAmount&quot;: ${saleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber3},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku3}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId4}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount4},&#xd;
    &quot;saleAmount&quot;: ${saleAmount4},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber4},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku4}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId5}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount5},&#xd;
    &quot;saleAmount&quot;: ${saleAmount5},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber5},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku5}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId6}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount6},&#xd;
    &quot;saleAmount&quot;: ${saleAmount6},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber6},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku6}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId7}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount7},&#xd;
    &quot;saleAmount&quot;: ${saleAmount7},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber7},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku7}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}&amp;saveOptions.executionMode=simulation</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 8 [e-commerce Simulation]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId3}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount3},&#xd;
    &quot;saleAmount&quot;: ${saleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber3},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku3}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId4}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount4},&#xd;
    &quot;saleAmount&quot;: ${saleAmount4},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber4},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku4}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId5}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount5},&#xd;
    &quot;saleAmount&quot;: ${saleAmount5},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber5},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku5}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId6}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount6},&#xd;
    &quot;saleAmount&quot;: ${saleAmount6},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber6},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku6}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId7}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount7},&#xd;
    &quot;saleAmount&quot;: ${saleAmount7},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber7},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku7}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId8}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount8},&#xd;
    &quot;saleAmount&quot;: ${saleAmount8},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber8},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku8}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}&amp;saveOptions.executionMode=simulation</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="(POST) /loyalty/cardTransactions [e-commerce]" enabled="true">
            <collectionProp name="Weights">
              <collectionProp name="-2121651989">
                <stringProp name="-90236208">(POST) /loyalty/cardTransactions 1 [e-commerce]</stringProp>
                <stringProp name="1567">10</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="988247962">
                <stringProp name="-595794833">(POST) /loyalty/cardTransactions 2 [e-commerce]</stringProp>
                <stringProp name="1598">20</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1470817151">
                <stringProp name="-1101353458">(POST) /loyalty/cardTransactions 3 [e-commerce]</stringProp>
                <stringProp name="1629">30</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="821729747">
                <stringProp name="-1606912083">(POST) /loyalty/cardTransactions 4 [e-commerce]</stringProp>
                <stringProp name="1598">20</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1973093291">
                <stringProp name="-2112470708">(POST) /loyalty/cardTransactions 5 [e-commerce]</stringProp>
                <stringProp name="1567">10</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="157563031">
                <stringProp name="1676937963">(POST) /loyalty/cardTransactions 6 [e-commerce]</stringProp>
                <stringProp name="53">5</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="502300066">
                <stringProp name="1171379338">(POST) /loyalty/cardTransactions 7 [e-commerce]</stringProp>
                <stringProp name="51">3</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="733888174">
                <stringProp name="665820713">(POST) /loyalty/cardTransactions 8 [e-commerce]</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 1 [e-commerce]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 2 [e-commerce]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 3 [e-commerce]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId3}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount3},&#xd;
    &quot;saleAmount&quot;: ${saleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber3},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku3}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 4 [e-commerce]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId3}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount3},&#xd;
    &quot;saleAmount&quot;: ${saleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber3},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku3}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId4}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount4},&#xd;
    &quot;saleAmount&quot;: ${saleAmount4},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber4},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku4}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 5 [e-commerce]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId3}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount3},&#xd;
    &quot;saleAmount&quot;: ${saleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber3},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku3}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId4}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount4},&#xd;
    &quot;saleAmount&quot;: ${saleAmount4},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber4},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku4}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId5}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount5},&#xd;
    &quot;saleAmount&quot;: ${saleAmount5},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber5},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku5}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 6 [e-commerce]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId3}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount3},&#xd;
    &quot;saleAmount&quot;: ${saleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber3},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku3}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId4}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount4},&#xd;
    &quot;saleAmount&quot;: ${saleAmount4},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber4},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku4}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId5}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount5},&#xd;
    &quot;saleAmount&quot;: ${saleAmount5},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber5},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku5}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId6}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount6},&#xd;
    &quot;saleAmount&quot;: ${saleAmount6},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber6},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku6}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 7 [e-commerce]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId3}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount3},&#xd;
    &quot;saleAmount&quot;: ${saleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber3},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku3}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId4}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount4},&#xd;
    &quot;saleAmount&quot;: ${saleAmount4},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber4},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku4}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId5}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount5},&#xd;
    &quot;saleAmount&quot;: ${saleAmount5},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber5},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku5}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId6}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount6},&#xd;
    &quot;saleAmount&quot;: ${saleAmount6},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber6},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku6}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId7}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount7},&#xd;
    &quot;saleAmount&quot;: ${saleAmount7},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber7},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku7}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions 8 [e-commerce]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount1},&#xd;
    &quot;saleAmount&quot;: ${saleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku1}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId2}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount2},&#xd;
    &quot;saleAmount&quot;: ${saleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku2}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId3}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount3},&#xd;
    &quot;saleAmount&quot;: ${saleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber3},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku3}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId4}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount4},&#xd;
    &quot;saleAmount&quot;: ${saleAmount4},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber4},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku4}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId5}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount5},&#xd;
    &quot;saleAmount&quot;: ${saleAmount5},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber5},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku5}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId6}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount6},&#xd;
    &quot;saleAmount&quot;: ${saleAmount6},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber6},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku6}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId7}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount7},&#xd;
    &quot;saleAmount&quot;: ${saleAmount7},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber7},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku7}&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId8}&quot;,&#xd;
    &quot;retailAmount&quot;: ${saleAmount8},&#xd;
    &quot;saleAmount&quot;: ${saleAmount8},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber8},&#xd;
    &quot;plu&quot;:&quot;${random_sim_sku8}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="(POST) /loyalty/cardTransactions [pos]" enabled="true">
            <collectionProp name="Weights">
              <collectionProp name="-865393346">
                <stringProp name="161326887">(POST) /loyalty/cardTransactions [pos1]</stringProp>
                <stringProp name="1603">25</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-838794788">
                <stringProp name="161326918">(POST) /loyalty/cardTransactions [pos2]</stringProp>
                <stringProp name="1629">30</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-835501441">
                <stringProp name="161326949">(POST) /loyalty/cardTransactions [pos3]</stringProp>
                <stringProp name="1603">25</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-832159269">
                <stringProp name="161326980">(POST) /loyalty/cardTransactions [pos4]</stringProp>
                <stringProp name="1598">20</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [pos1]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;retailAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)},&#xd;
    &quot;plu&quot;:&quot;${random_sku}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [pos2]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;retailAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)},&#xd;
    &quot;plu&quot;:&quot;${random_sku}&quot;&#xd;
    },  &#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;retailAmount&quot;: ${posSaleAmount2},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)},&#xd;
    &quot;plu&quot;:&quot;${random_sku}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [pos3]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;retailAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)},&#xd;
    &quot;plu&quot;:&quot;${random_sku}&quot;&#xd;
    },  &#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;retailAmount&quot;: ${posSaleAmount2},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)},&#xd;
    &quot;plu&quot;:&quot;${random_sku}&quot;&#xd;
    },  &#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;retailAmount&quot;: ${posSaleAmount3},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)},&#xd;
    &quot;plu&quot;:&quot;${random_sku}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}


if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [pos4]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;retailAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)},&#xd;
    &quot;plu&quot;:&quot;${random_sku}&quot;&#xd;
    },  &#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;retailAmount&quot;: ${posSaleAmount2},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount2},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)},&#xd;
    &quot;plu&quot;:&quot;${random_sku}&quot;&#xd;
    },  &#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;retailAmount&quot;: ${posSaleAmount3},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount3},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)},&#xd;
    &quot;plu&quot;:&quot;${random_sku}&quot;&#xd;
    },  &#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;retailAmount&quot;: ${posSaleAmount4},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount4},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)},&#xd;
    &quot;plu&quot;:&quot;${random_sku}&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${__time(dd-MM-yyyy HH:mm:ss)}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-339514408">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="1000489776">${__time(dd-MM-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">bearer ${__property(accessToken)}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Wendy&apos;s REST Thread Group Weighted" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">40</stringProp>
        <stringProp name="ThreadGroup.ramp_time">30</stringProp>
        <longProp name="ThreadGroup.start_time">1515862107000</longProp>
        <longProp name="ThreadGroup.end_time">1515862107000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">3600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Tests that work on Wendy&apos;s schema</stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">${JMeterPath}\testmembers.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">memberidcsv,alternateidcsv,cardnumbercsv,vckeycsv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Unique User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="132835675">firstName</stringProp>
            <stringProp name="-818219584">middleName</stringProp>
            <stringProp name="-1459599807">lastName</stringProp>
            <stringProp name="106642798">phone</stringProp>
            <stringProp name="-265713450">username</stringProp>
            <stringProp name="96619420">email</stringProp>
            <stringProp name="-196799691">alternateId</stringProp>
            <stringProp name="-1367605173">cardId</stringProp>
            <stringProp name="-1299765226">email2</stringProp>
            <stringProp name="-1805823075">alternateId2</stringProp>
            <stringProp name="553912647">cardId2</stringProp>
            <stringProp name="352817692">username2</stringProp>
            <stringProp name="-1299765225">email3</stringProp>
            <stringProp name="-1805823074">alternateId3</stringProp>
            <stringProp name="553912648">cardId3</stringProp>
            <stringProp name="352817693">username3</stringProp>
            <stringProp name="-1299765224">email4</stringProp>
            <stringProp name="-1805823073">alternateId4</stringProp>
            <stringProp name="553912649">cardId4</stringProp>
            <stringProp name="352817694">username4</stringProp>
            <stringProp name="-1299765223">email5</stringProp>
            <stringProp name="-1805823072">alternateId5</stringProp>
            <stringProp name="553912650">cardId5</stringProp>
            <stringProp name="352817695">username5</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="908532706">
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1590862323">${__Random(1000000000,9999999999)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
        <hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="bzm - Weighted Switch Controller" enabled="true">
            <collectionProp name="Weights">
              <collectionProp name="961449857">
                <stringProp name="1937338912">(POST) /loyalty/members</stringProp>
                <stringProp name="53">5</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-644026506">
                <stringProp name="1497141752">(POST) /loyalty/members (no memberDetails)</stringProp>
                <stringProp name="53">5</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-137044538">
                <stringProp name="388749113">Post member and memberdetails</stringProp>
                <stringProp name="53">5</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="514128655">
                <stringProp name="-1287250192">(GET) /loyalty/members/{id}</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="2092145480">
                <stringProp name="1100263358">(PATCH) /loyalty/members/{id}</stringProp>
                <stringProp name="51">3</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1530893119">
                <stringProp name="-1566995112">(POST) /loyalty/cards/{id}/transactions</stringProp>
                <stringProp name="1573">16</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1848929229">
                <stringProp name="-1785083786">(POST) /loyalty/cards/{id}/attributeSets/{attributeSetName}</stringProp>
                <stringProp name="1574">17</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-866246466">
                <stringProp name="161326887">(POST) /loyalty/cardTransactions [pos1]</stringProp>
                <stringProp name="1574">17</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1475616486">
                <stringProp name="-363828244">(POST) /loyalty/members/{id}/attributeSets/{attributeSetName}</stringProp>
                <stringProp name="51">3</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1974009569">
                <stringProp name="1717699333">(GET) /loyalty/members/{id}/rewards</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1503497592">
                <stringProp name="-701893060">(GET) /loyalty/memberRewards (FMS)</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="272473812">
                <stringProp name="1379252265">(POST) /loyalty/members/{id}/rewardChoice</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-2042757797">
                <stringProp name="1256783684">(POST) /loyalty/members/rewardChoice (FMS)</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="738191364">
                <stringProp name="1679031736">(GET) /loyalty/members/{id}/accountSummary</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="447906090">
                <stringProp name="1610109895">(GET) /loyalty/members/accountSummary (FMS)</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-670473409">
                <stringProp name="149915768">(GET) /loyalty/members/{id}/activitySummary</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1287917429">
                <stringProp name="-1001283021">(GET) /loyalty/members/activitySummary (FMS)</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1137401355">
                <stringProp name="1088154328">Signup and Login</stringProp>
                <stringProp name="54">6</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-87534180">
                <stringProp name="-991131133">Replace and Merge</stringProp>
                <stringProp name="53">5</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomSimulationSku" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);

if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku&quot;,&quot;1111&quot;);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Simulation Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="1760534389">itemNumber1</stringProp>
                <stringProp name="1760534390">itemNumber2</stringProp>
                <stringProp name="1760534391">itemNumber3</stringProp>
                <stringProp name="1760534392">itemNumber4</stringProp>
                <stringProp name="1760534393">itemNumber5</stringProp>
                <stringProp name="1760534394">itemNumber6</stringProp>
                <stringProp name="1760534395">itemNumber7</stringProp>
                <stringProp name="1760534396">itemNumber8</stringProp>
                <stringProp name="2116183651">itemId1</stringProp>
                <stringProp name="2116183652">itemId2</stringProp>
                <stringProp name="2116183653">itemId3</stringProp>
                <stringProp name="2116183654">itemId4</stringProp>
                <stringProp name="2116183655">itemId5</stringProp>
                <stringProp name="2116183656">itemId6</stringProp>
                <stringProp name="2116183657">itemId7</stringProp>
                <stringProp name="2116183658">itemId8</stringProp>
                <stringProp name="705561746">saleAmount1</stringProp>
                <stringProp name="705561747">saleAmount2</stringProp>
                <stringProp name="705561748">saleAmount3</stringProp>
                <stringProp name="705561749">saleAmount4</stringProp>
                <stringProp name="705561750">saleAmount5</stringProp>
                <stringProp name="705561751">saleAmount6</stringProp>
                <stringProp name="705561752">saleAmount7</stringProp>
                <stringProp name="705561753">saleAmount8</stringProp>
                <stringProp name="1042087326">posSaleAmount1</stringProp>
                <stringProp name="1042087327">posSaleAmount2</stringProp>
                <stringProp name="1042087328">posSaleAmount3</stringProp>
                <stringProp name="1042087329">posSaleAmount4</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1956770559">
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;birthDate&quot;: &quot;2017-07-19T16:20:42.7719+00:00&quot;,&#xd;
&quot;changedBy&quot;: &quot;REST Test&quot;,&#xd;
&quot;firstName&quot;: &quot;${firstName}&quot;,&#xd;
&quot;isEmployee&quot;: false,&#xd;
&quot;lastName&quot;: &quot;${lastName}&quot;,&#xd;
&quot;memberStatus&quot;: &quot;Active&quot;,&#xd;
&quot;middleName&quot;: &quot;&quot;,&#xd;
&quot;password&quot;: &quot;Password123&amp;&quot;,&#xd;
&quot;passwordExpireDate&quot;: &quot;2017-10-17&quot;,&#xd;
&quot;preferredLanguage&quot;: &quot;en&quot;,&#xd;
&quot;zipCode&quot;: &quot;75124&quot;,&#xd;
&quot;username&quot;: &quot;${username}&quot;,&#xd;
&quot;email&quot;: &quot;${email}&quot;,&#xd;
&quot;alternateId&quot;: &quot;${alternateId}&quot;,&#xd;
&quot;cards&quot;: [&#xd;
  {&#xd;
    &quot;isPrimary&quot;: true,&#xd;
    &quot;cardNumber&quot;: &quot;${cardId}&quot;,&#xd;
    &quot;cardType&quot;: 1&#xd;
  }&#xd;
],&#xd;
&quot;attributeSets&quot;: [&#xd;
  {&#xd;
    &quot;memberDetails&quot;: {&#xd;
      &quot;addressLineOne&quot;: &quot;1234 Main St&quot;,&#xd;
      &quot;city&quot;: &quot;Dallas&quot;,&#xd;
      &quot;stateOrProvince&quot;: &quot;TX&quot;,&#xd;
      &quot;zipOrPostalCode&quot;: &quot;75123&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;,&#xd;
      &quot;mobilePhone&quot;: &quot;2145550010&quot;,&#xd;
      &quot;emailOptIn&quot;: true,&#xd;
      &quot;emailOptInDate&quot;: &quot;2017-11-17&quot;,&#xd;
      &quot;dma&quot;: 1&#xd;
    }&#xd;
  }&#xd;
]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Member Property Extractor" enabled="true">
                <stringProp name="TestPlan.comments">	</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">memberId; cardId; memberDetailId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id; $.data.cards[0].id; $.data.attributeSets[0].[0].memberDetails[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">No_Default; No_Default; No_Default</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members (no memberDetails)" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;birthDate&quot;: &quot;2017-07-19T16:20:42.7719+00:00&quot;,&#xd;
&quot;changedBy&quot;: &quot;REST Test&quot;,&#xd;
&quot;firstName&quot;: &quot;${firstName}&quot;,&#xd;
&quot;isEmployee&quot;: false,&#xd;
&quot;lastName&quot;: &quot;${lastName}&quot;,&#xd;
&quot;memberStatus&quot;: &quot;Active&quot;,&#xd;
&quot;middleName&quot;: &quot;&quot;,&#xd;
&quot;password&quot;: &quot;Password123&amp;&quot;,&#xd;
&quot;passwordExpireDate&quot;: &quot;2017-10-17&quot;,&#xd;
&quot;preferredLanguage&quot;: &quot;en&quot;,&#xd;
&quot;zipCode&quot;: &quot;75124&quot;,&#xd;
&quot;username&quot;: &quot;${username2}&quot;,&#xd;
&quot;email&quot;: &quot;${email2}&quot;,&#xd;
&quot;alternateId&quot;: &quot;${alternateId2}&quot;,&#xd;
&quot;cards&quot;: [&#xd;
  {&#xd;
    &quot;isPrimary&quot;: true,&#xd;
    &quot;cardNumber&quot;: &quot;${cardId2}&quot;,&#xd;
    &quot;cardType&quot;: 1&#xd;
  }&#xd;
]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Member Property Extractor" enabled="true">
                <stringProp name="TestPlan.comments">	</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">memberId2; cardId2;</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id; $.data.cards[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">No_Default; No_Default</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Post member and memberdetails" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members (for attributeSet FMS)" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
&quot;birthDate&quot;: &quot;2017-07-19T16:20:42.7719+00:00&quot;,&#xd;
&quot;changedBy&quot;: &quot;REST Test&quot;,&#xd;
&quot;firstName&quot;: &quot;${firstName}&quot;,&#xd;
&quot;isEmployee&quot;: false,&#xd;
&quot;lastName&quot;: &quot;${lastName}&quot;,&#xd;
&quot;memberStatus&quot;: &quot;Active&quot;,&#xd;
&quot;middleName&quot;: &quot;&quot;,&#xd;
&quot;password&quot;: &quot;Password123&amp;&quot;,&#xd;
&quot;passwordExpireDate&quot;: &quot;2017-10-17&quot;,&#xd;
&quot;preferredLanguage&quot;: &quot;en&quot;,&#xd;
&quot;zipCode&quot;: &quot;75124&quot;,&#xd;
&quot;username&quot;: &quot;${username3}&quot;,&#xd;
&quot;email&quot;: &quot;${email3}&quot;,&#xd;
&quot;alternateId&quot;: &quot;${alternateId3}&quot;,&#xd;
&quot;cards&quot;: [&#xd;
  {&#xd;
    &quot;isPrimary&quot;: true,&#xd;
    &quot;cardNumber&quot;: &quot;${cardId3}&quot;,&#xd;
    &quot;cardType&quot;: 1&#xd;
  }&#xd;
]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Member Property Extractor" enabled="true">
                  <stringProp name="TestPlan.comments">	</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">memberId3; cardId3;</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id; $.data.cards[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">No_Default; No_Default</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/attributeSets/{attributeSetName}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
      &quot;addressLineOne&quot;: &quot;1234 Main St&quot;,&#xd;
      &quot;city&quot;: &quot;Dallas&quot;,&#xd;
      &quot;stateOrProvince&quot;: &quot;TX&quot;,&#xd;
      &quot;zipOrPostalCode&quot;: &quot;75123&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;,&#xd;
      &quot;mobilePhone&quot;: &quot;2145550010&quot;,&#xd;
      &quot;emailOptIn&quot;: true,&#xd;
      &quot;emailOptInDate&quot;: &quot;2017-11-17&quot;,&#xd;
      &quot;dma&quot;: 1&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/attributeSets/memberDetails?member.alternateid=${alternateId3}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(GET) /loyalty/members/{id}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/${memberidcsv}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(PATCH) /loyalty/members/{id}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{  &#xd;
  &quot;birthDate&quot;:&quot;2017-07-19T16:20:42.7719+00:00&quot;,&#xd;
  &quot;changedBy&quot;:&quot;REST Test&quot;,&#xd;
  &quot;firstName&quot;:&quot;${firstName}&quot;,&#xd;
  &quot;isEmployee&quot;:false,&#xd;
  &quot;lastName&quot;:&quot;${lastName}&quot;,&#xd;
  &quot;memberStatus&quot;:&quot;Active&quot;,&#xd;
  &quot;middleName&quot;:&quot;&quot;,&#xd;
  &quot;password&quot;:&quot;Password123&amp;&quot;,&#xd;
  &quot;passwordExpireDate&quot;:&quot;2017-10-17&quot;,&#xd;
  &quot;preferredLanguage&quot;:&quot;en&quot;,&#xd;
  &quot;zipCode&quot;:&quot;75124&quot;,&#xd;
  &quot;username&quot;:&quot;${username}&quot;,&#xd;
  &quot;email&quot;:&quot;${email}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/${memberidcsv}</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cards/{id}/transactions" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;itemCount&quot;: 2,&#xd;
  &quot;storeNumber&quot;: &quot;290&quot;,&#xd;
  &quot;orderSource&quot;: &quot;test&quot;,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 100.00,&#xd;
    &quot;saleAmount&quot;: 100.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;123ABC&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${ItemId2}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 200.00,&#xd;
    &quot;saleAmount&quot;: 200.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;123ABC&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cards/${vckeycsv}/transactions</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="1760534389">itemNumber1</stringProp>
                  <stringProp name="1760534390">itemNumber2</stringProp>
                  <stringProp name="2116183651">itemId1</stringProp>
                  <stringProp name="-514130364">ItemId2</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-1566784425">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                    <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cards/{id}/attributeSets/{attributeSetName}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
&quot;transactionType&quot;: 1,&#xd;
&quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
&quot;registerNumber&quot;: &quot;1&quot;,&#xd;
&quot;storeId&quot;: 200,&#xd;
&quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;itemCount&quot;: 2,&#xd;
  &quot;storeNumber&quot;: &quot;290&quot;,&#xd;
  &quot;orderSource&quot;: &quot;test&quot;,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 100.00,&#xd;
    &quot;saleAmount&quot;: 100.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;123ABC&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${ItemId2}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 200.00,&#xd;
    &quot;saleAmount&quot;: 200.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;123ABC&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cards/${vckeycsv}/attributeSets/transactions</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="1760534389">itemNumber1</stringProp>
                  <stringProp name="1760534390">itemNumber2</stringProp>
                  <stringProp name="2116183651">itemId1</stringProp>
                  <stringProp name="-514130364">ItemId2</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-1566784425">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                    <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [pos1]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290, &#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;itemCount&quot;: 2,&#xd;
  &quot;storeNumber&quot;: &quot;290&quot;,&#xd;
  &quot;orderSource&quot;: &quot;test&quot;,  &#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},    &#xd;
    &quot;retailAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)},&#xd;
    &quot;plu&quot;:&quot;123ABC&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="1760534389">itemNumber1</stringProp>
                  <stringProp name="1760534390">itemNumber2</stringProp>
                  <stringProp name="2116183651">itemId1</stringProp>
                  <stringProp name="-514130364">ItemId2</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-1566784425">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                    <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members/{id}/attributeSets/{attributeSetName}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
      &quot;addressLineOne&quot;: &quot;1234 Main St&quot;,&#xd;
      &quot;city&quot;: &quot;Dallas&quot;,&#xd;
      &quot;stateOrProvince&quot;: &quot;TX&quot;,&#xd;
      &quot;zipOrPostalCode&quot;: &quot;75123&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;,&#xd;
      &quot;mobilePhone&quot;: &quot;2145550010&quot;,&#xd;
      &quot;emailOptIn&quot;: true,&#xd;
      &quot;emailOptInDate&quot;: &quot;2017-11-17&quot;,&#xd;
      &quot;dma&quot;: 1&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/${memberId2}/attributeSets/memberDetails</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(GET) /loyalty/members/{id}/rewards" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/${memberidcsv}/rewards</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(GET) /loyalty/memberRewards (FMS)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/memberRewards?member.alternateid=${alternateidcsv}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members/{id}/rewardChoice" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &quot;rewardId&quot;: 726 }</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/${memberidcsv}/rewardChoice</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members/rewardChoice (FMS)" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &quot;rewardId&quot;: 726 }</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/rewardChoice?member.alternateid=${alternateidcsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(GET) /loyalty/members/{id}/accountSummary" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/${memberidcsv}/accountSummary</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(GET) /loyalty/members/accountSummary (FMS)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/accountSummary?member.alternateid=${alternateidcsv}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(GET) /loyalty/members/{id}/activitySummary" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/${memberidcsv}/activitySummary</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(GET) /loyalty/members/activitySummary (FMS)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/activitySummary?member.alternateid=${alternateidcsv}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Signup and Login" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /auth/signup" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;clientId&quot;: &quot;${ClientId}&quot;,&#xd;
    &quot;email&quot;: &quot;${email4}&quot;,&#xd;
    &quot;password&quot;: &quot;Password123&amp;&quot;,&#xd;
    &quot;username&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;attributeSets&quot;: [&#xd;
        {&#xd;
        &quot;memberDetails&quot;: {&#xd;
         &quot;addressLineOne&quot;: &quot;1234 Main St&quot;,&#xd;
         &quot;city&quot;: &quot;Dallas&quot;,&#xd;
         &quot;stateOrProvince&quot;: &quot;TX&quot;,&#xd;
         &quot;zipOrPostalCode&quot;: &quot;75123&quot;,&#xd;
         &quot;country&quot;: &quot;USA&quot;,&#xd;
         &quot;mobilePhone&quot;: &quot;2145550010&quot;,&#xd;
         &quot;emailOptIn&quot;: true,&#xd;
         &quot;emailOptInDate&quot;: &quot;2017-11-17&quot;,&#xd;
         &quot;dma&quot;: 1&#xd;
       }&#xd;
      }&#xd;
    ]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/auth/signup</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Member Property Extractor" enabled="true">
                  <stringProp name="TestPlan.comments">	</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">memberId; cardId; memberDetailId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id; $.data.cards[0].id; $.data.attributeSets[0].[0].memberDetails[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">No_Default; No_Default; No_Default</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /auth/login" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;clientId&quot;: &quot;${ClientId}&quot;,&#xd;
    &quot;email&quot;: &quot;${email4}&quot;,&#xd;
    &quot;password&quot;: &quot;Password123&amp;&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/auth/login</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Member Property Extractor" enabled="true">
                  <stringProp name="TestPlan.comments">	</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">memberId; cardId; memberDetailId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id; $.data.cards[0].id; $.data.attributeSets[0].[0].memberDetails[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">No_Default; No_Default; No_Default</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Replace and Merge" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
&quot;birthDate&quot;: &quot;2017-07-19T16:20:42.7719+00:00&quot;,&#xd;
&quot;changedBy&quot;: &quot;REST Test&quot;,&#xd;
&quot;firstName&quot;: &quot;${firstName}&quot;,&#xd;
&quot;isEmployee&quot;: false,&#xd;
&quot;lastName&quot;: &quot;${lastName}&quot;,&#xd;
&quot;memberStatus&quot;: &quot;Active&quot;,&#xd;
&quot;middleName&quot;: &quot;&quot;,&#xd;
&quot;password&quot;: &quot;Password123&amp;&quot;,&#xd;
&quot;passwordExpireDate&quot;: &quot;2017-10-17&quot;,&#xd;
&quot;preferredLanguage&quot;: &quot;en&quot;,&#xd;
&quot;zipCode&quot;: &quot;75124&quot;,&#xd;
&quot;username&quot;: &quot;${username4}&quot;,&#xd;
&quot;email&quot;: &quot;${email4}&quot;,&#xd;
&quot;alternateId&quot;: &quot;${alternateId4}&quot;,&#xd;
&quot;cards&quot;: [&#xd;
  {&#xd;
    &quot;isPrimary&quot;: true,&#xd;
    &quot;cardNumber&quot;: &quot;${cardId4}&quot;,&#xd;
    &quot;cardType&quot;: 1&#xd;
  }&#xd;
],&#xd;
&quot;attributeSets&quot;: [&#xd;
  {&#xd;
    &quot;memberDetails&quot;: {&#xd;
      &quot;addressLineOne&quot;: &quot;1234 Main St&quot;,&#xd;
      &quot;city&quot;: &quot;Dallas&quot;,&#xd;
      &quot;stateOrProvince&quot;: &quot;TX&quot;,&#xd;
      &quot;zipOrPostalCode&quot;: &quot;75123&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;,&#xd;
      &quot;mobilePhone&quot;: &quot;2145550010&quot;,&#xd;
      &quot;emailOptIn&quot;: true,&#xd;
      &quot;emailOptInDate&quot;: &quot;2017-11-17&quot;,&#xd;
      &quot;dma&quot;: 1&#xd;
    }&#xd;
  }&#xd;
]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Member Property Extractor" enabled="true">
                  <stringProp name="TestPlan.comments">	</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">memberId4; cardId4; memberDetailId4</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id; $.data.cards[0].id; $.data.attributeSets[0].[0].memberDetails[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">No_Default; No_Default; No_Default</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
&quot;birthDate&quot;: &quot;2017-07-19T16:20:42.7719+00:00&quot;,&#xd;
&quot;changedBy&quot;: &quot;REST Test&quot;,&#xd;
&quot;firstName&quot;: &quot;${firstName}&quot;,&#xd;
&quot;isEmployee&quot;: false,&#xd;
&quot;lastName&quot;: &quot;${lastName}&quot;,&#xd;
&quot;memberStatus&quot;: &quot;Active&quot;,&#xd;
&quot;middleName&quot;: &quot;&quot;,&#xd;
&quot;password&quot;: &quot;Password123&amp;&quot;,&#xd;
&quot;passwordExpireDate&quot;: &quot;2017-10-17&quot;,&#xd;
&quot;preferredLanguage&quot;: &quot;en&quot;,&#xd;
&quot;zipCode&quot;: &quot;75124&quot;,&#xd;
&quot;username&quot;: &quot;${username5}&quot;,&#xd;
&quot;email&quot;: &quot;${email5}&quot;,&#xd;
&quot;alternateId&quot;: &quot;${alternateId5}&quot;,&#xd;
&quot;cards&quot;: [&#xd;
  {&#xd;
    &quot;isPrimary&quot;: true,&#xd;
    &quot;cardNumber&quot;: &quot;${cardId5}&quot;,&#xd;
    &quot;cardType&quot;: 1&#xd;
  }&#xd;
],&#xd;
&quot;attributeSets&quot;: [&#xd;
  {&#xd;
    &quot;memberDetails&quot;: {&#xd;
      &quot;addressLineOne&quot;: &quot;1234 Main St&quot;,&#xd;
      &quot;city&quot;: &quot;Dallas&quot;,&#xd;
      &quot;stateOrProvince&quot;: &quot;TX&quot;,&#xd;
      &quot;zipOrPostalCode&quot;: &quot;75123&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;,&#xd;
      &quot;mobilePhone&quot;: &quot;2145550010&quot;,&#xd;
      &quot;emailOptIn&quot;: true,&#xd;
      &quot;emailOptInDate&quot;: &quot;2017-11-17&quot;,&#xd;
      &quot;dma&quot;: 1&#xd;
    }&#xd;
  }&#xd;
]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Member Property Extractor" enabled="true">
                  <stringProp name="TestPlan.comments">	</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">memberId5; cardId5; memberDetailId5</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id; $.data.cards[0].id; $.data.attributeSets[0].[0].memberDetails[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">No_Default; No_Default; No_Default</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cards/{id}/transactions" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;itemCount&quot;: 2,&#xd;
  &quot;storeNumber&quot;: &quot;290&quot;,&#xd;
  &quot;orderSource&quot;: &quot;test&quot;,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 100.00,&#xd;
    &quot;saleAmount&quot;: 100.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;123ABC&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${ItemId2}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 200.00,&#xd;
    &quot;saleAmount&quot;: 200.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;123ABC&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cards/${cardId4}/transactions</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="448240793">transactionId</stringProp>
                    <stringProp name="1760534389">itemNumber1</stringProp>
                    <stringProp name="1760534390">itemNumber2</stringProp>
                    <stringProp name="2116183651">itemId1</stringProp>
                    <stringProp name="-514130364">ItemId2</stringProp>
                    <stringProp name="-1304193265">tenderId</stringProp>
                    <stringProp name="1262524332">transactionDate</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="-1566784425">
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cards/{id}/transactions" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;itemCount&quot;: 2,&#xd;
  &quot;storeNumber&quot;: &quot;290&quot;,&#xd;
  &quot;orderSource&quot;: &quot;test&quot;,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 100.00,&#xd;
    &quot;saleAmount&quot;: 100.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1},&#xd;
    &quot;plu&quot;:&quot;123ABC&quot;&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${ItemId2}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 200.00,&#xd;
    &quot;saleAmount&quot;: 200.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2},&#xd;
    &quot;plu&quot;:&quot;123ABC&quot;&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cards/${cardId4}/transactions</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="448240793">transactionId</stringProp>
                    <stringProp name="1760534389">itemNumber1</stringProp>
                    <stringProp name="1760534390">itemNumber2</stringProp>
                    <stringProp name="2116183651">itemId1</stringProp>
                    <stringProp name="-514130364">ItemId2</stringProp>
                    <stringProp name="-1304193265">tenderId</stringProp>
                    <stringProp name="1262524332">transactionDate</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="-1566784425">
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cards/{id}/replace" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;replacementCardNumber&quot;: &quot;${cardNumber}&quot;,&#xd;
    &quot;transferPoints&quot;: true,&#xd;
    &quot;effectiveDate&quot;: &quot;2018-02-23T10:00:10.0560497-06:00&quot;,&#xd;
    &quot;replaceReason&quot;: &quot;test&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cards/${cardId4}/replace</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="508016249">cardNumber</stringProp>
                    <stringProp name="1760534389">itemNumber1</stringProp>
                    <stringProp name="1760534390">itemNumber2</stringProp>
                    <stringProp name="2116183651">itemId1</stringProp>
                    <stringProp name="-514130364">ItemId2</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="-711277479">
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members/merge" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/merge?fromMember.alternateId=${alternateId4}&amp;toMember.alternateId=${alternateId5}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="508016249">cardNumber</stringProp>
                    <stringProp name="1760534389">itemNumber1</stringProp>
                    <stringProp name="1760534390">itemNumber2</stringProp>
                    <stringProp name="2116183651">itemId1</stringProp>
                    <stringProp name="-514130364">ItemId2</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="-711277479">
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">if(prev.getErrorCount()==0){
	return;
}

String oldCountAsString = props.getProperty(&quot;ERROR_COUNT&quot;);
int count = 0;
synchronized(props){
	count = Integer.parseInt(oldCountAsString) + 1;
	props.setProperty(&quot;ERROR_COUNT&quot;, Integer.toString(count));
	if(count == 500)
	{
		prev.setStopTest(true);
	}
}
</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Product REST Thread Group Weighted" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">40</stringProp>
        <stringProp name="ThreadGroup.ramp_time">30</stringProp>
        <longProp name="ThreadGroup.start_time">1515862107000</longProp>
        <longProp name="ThreadGroup.end_time">1515862107000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">3600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Tests that work on a base product schema</stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">${JMeterPath}\testmembers.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">memberidcsv,alternateidcsv,cardnumbercsv,vckeycsv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Unique User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="132835675">firstName</stringProp>
            <stringProp name="-818219584">middleName</stringProp>
            <stringProp name="-1459599807">lastName</stringProp>
            <stringProp name="106642798">phone</stringProp>
            <stringProp name="-265713450">username</stringProp>
            <stringProp name="96619420">email</stringProp>
            <stringProp name="-196799691">alternateId</stringProp>
            <stringProp name="-1367605173">cardId</stringProp>
            <stringProp name="-1299765226">email2</stringProp>
            <stringProp name="-1805823075">alternateId2</stringProp>
            <stringProp name="553912647">cardId2</stringProp>
            <stringProp name="352817692">username2</stringProp>
            <stringProp name="-1299765225">email3</stringProp>
            <stringProp name="-1805823074">alternateId3</stringProp>
            <stringProp name="553912648">cardId3</stringProp>
            <stringProp name="352817693">username3</stringProp>
            <stringProp name="-1299765224">email4</stringProp>
            <stringProp name="-1805823073">alternateId4</stringProp>
            <stringProp name="553912649">cardId4</stringProp>
            <stringProp name="352817694">username4</stringProp>
            <stringProp name="-1299765223">email5</stringProp>
            <stringProp name="-1805823072">alternateId5</stringProp>
            <stringProp name="553912650">cardId5</stringProp>
            <stringProp name="352817695">username5</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="908532706">
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1590862323">${__Random(1000000000,9999999999)}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="566433081">${__V(StressTest${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@gmail.com)}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="1623793987">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
        <hashTree>
          <com.blazemeter.jmeter.control.WeightedSwitchController guiclass="com.blazemeter.jmeter.control.WeightedSwitchControllerGui" testclass="com.blazemeter.jmeter.control.WeightedSwitchController" testname="bzm - Weighted Switch Controller" enabled="true">
            <collectionProp name="Weights">
              <collectionProp name="961449857">
                <stringProp name="1937338912">(POST) /loyalty/members</stringProp>
                <stringProp name="53">5</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-644026506">
                <stringProp name="1497141752">(POST) /loyalty/members (no memberDetails)</stringProp>
                <stringProp name="53">5</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-137044538">
                <stringProp name="388749113">Post member and memberdetails</stringProp>
                <stringProp name="53">5</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="514128655">
                <stringProp name="-1287250192">(GET) /loyalty/members/{id}</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="2092145480">
                <stringProp name="1100263358">(PATCH) /loyalty/members/{id}</stringProp>
                <stringProp name="51">3</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1530893119">
                <stringProp name="-1566995112">(POST) /loyalty/cards/{id}/transactions</stringProp>
                <stringProp name="1573">16</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1848929229">
                <stringProp name="-1785083786">(POST) /loyalty/cards/{id}/attributeSets/{attributeSetName}</stringProp>
                <stringProp name="1574">17</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-866246466">
                <stringProp name="161326887">(POST) /loyalty/cardTransactions [pos1]</stringProp>
                <stringProp name="1574">17</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="1475616486">
                <stringProp name="-363828244">(POST) /loyalty/members/{id}/attributeSets/{attributeSetName}</stringProp>
                <stringProp name="51">3</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-126702920">
                <stringProp name="1717699333">(GET) /loyalty/members/{id}/rewards</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="97196323">false</stringProp>
              </collectionProp>
              <collectionProp name="-944163055">
                <stringProp name="-701893060">(GET) /loyalty/memberRewards (FMS)</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="97196323">false</stringProp>
              </collectionProp>
              <collectionProp name="2119780461">
                <stringProp name="1379252265">(POST) /loyalty/members/{id}/rewardChoice</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="97196323">false</stringProp>
              </collectionProp>
              <collectionProp name="-195451148">
                <stringProp name="1256783684">(POST) /loyalty/members/rewardChoice (FMS)</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="97196323">false</stringProp>
              </collectionProp>
              <collectionProp name="738191364">
                <stringProp name="1679031736">(GET) /loyalty/members/{id}/accountSummary</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="447906090">
                <stringProp name="1610109895">(GET) /loyalty/members/accountSummary (FMS)</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-670473409">
                <stringProp name="149915768">(GET) /loyalty/members/{id}/activitySummary</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1287917429">
                <stringProp name="-1001283021">(GET) /loyalty/members/activitySummary (FMS)</stringProp>
                <stringProp name="50">2</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-1137401355">
                <stringProp name="1088154328">Signup and Login</stringProp>
                <stringProp name="54">6</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <collectionProp name="-87534180">
                <stringProp name="-991131133">Replace and Merge</stringProp>
                <stringProp name="53">5</stringProp>
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
            </collectionProp>
          </com.blazemeter.jmeter.control.WeightedSwitchController>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomSimulationSku" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);

if(chance &lt; 100)
{
	vars.put(&quot;random_sim_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sim_sku&quot;,&quot;1111&quot;);
}
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Simulation Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="1760534389">itemNumber1</stringProp>
                <stringProp name="1760534390">itemNumber2</stringProp>
                <stringProp name="1760534391">itemNumber3</stringProp>
                <stringProp name="1760534392">itemNumber4</stringProp>
                <stringProp name="1760534393">itemNumber5</stringProp>
                <stringProp name="1760534394">itemNumber6</stringProp>
                <stringProp name="1760534395">itemNumber7</stringProp>
                <stringProp name="1760534396">itemNumber8</stringProp>
                <stringProp name="2116183651">itemId1</stringProp>
                <stringProp name="2116183652">itemId2</stringProp>
                <stringProp name="2116183653">itemId3</stringProp>
                <stringProp name="2116183654">itemId4</stringProp>
                <stringProp name="2116183655">itemId5</stringProp>
                <stringProp name="2116183656">itemId6</stringProp>
                <stringProp name="2116183657">itemId7</stringProp>
                <stringProp name="2116183658">itemId8</stringProp>
                <stringProp name="705561746">saleAmount1</stringProp>
                <stringProp name="705561747">saleAmount2</stringProp>
                <stringProp name="705561748">saleAmount3</stringProp>
                <stringProp name="705561749">saleAmount4</stringProp>
                <stringProp name="705561750">saleAmount5</stringProp>
                <stringProp name="705561751">saleAmount6</stringProp>
                <stringProp name="705561752">saleAmount7</stringProp>
                <stringProp name="705561753">saleAmount8</stringProp>
                <stringProp name="1042087326">posSaleAmount1</stringProp>
                <stringProp name="1042087327">posSaleAmount2</stringProp>
                <stringProp name="1042087328">posSaleAmount3</stringProp>
                <stringProp name="1042087329">posSaleAmount4</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1956770559">
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="187832203">${__UUID}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                  <stringProp name="-1963457030">${__Random(0,40)}.${__Random(0,9)}${__Random(0,9)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;birthDate&quot;: &quot;2017-07-19T16:20:42.7719+00:00&quot;,&#xd;
&quot;changedBy&quot;: &quot;REST Test&quot;,&#xd;
&quot;firstName&quot;: &quot;${firstName}&quot;,&#xd;
&quot;isEmployee&quot;: false,&#xd;
&quot;lastName&quot;: &quot;${lastName}&quot;,&#xd;
&quot;memberStatus&quot;: &quot;Active&quot;,&#xd;
&quot;middleName&quot;: &quot;&quot;,&#xd;
&quot;password&quot;: &quot;Password123&amp;&quot;,&#xd;
&quot;passwordExpireDate&quot;: &quot;2017-10-17&quot;,&#xd;
&quot;preferredLanguage&quot;: &quot;en&quot;,&#xd;
&quot;zipCode&quot;: &quot;75124&quot;,&#xd;
&quot;username&quot;: &quot;${username}&quot;,&#xd;
&quot;email&quot;: &quot;${email}&quot;,&#xd;
&quot;alternateId&quot;: &quot;${alternateId}&quot;,&#xd;
&quot;cards&quot;: [&#xd;
  {&#xd;
    &quot;isPrimary&quot;: true,&#xd;
    &quot;cardNumber&quot;: &quot;${cardId}&quot;,&#xd;
    &quot;cardType&quot;: 1&#xd;
  }&#xd;
],&#xd;
&quot;attributeSets&quot;: [&#xd;
  {&#xd;
    &quot;memberDetails&quot;: {&#xd;
      &quot;addressLineOne&quot;: &quot;1234 Main St&quot;,&#xd;
      &quot;city&quot;: &quot;Dallas&quot;,&#xd;
      &quot;stateOrProvince&quot;: &quot;TX&quot;,&#xd;
      &quot;zipOrPostalCode&quot;: &quot;75123&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;,&#xd;
      &quot;mobilePhone&quot;: &quot;2145550010&quot;,&#xd;
      &quot;emailOptIn&quot;: true,&#xd;
      &quot;emailOptInDate&quot;: &quot;2017-11-17&quot;&#xd;
    }&#xd;
  }&#xd;
]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Member Property Extractor" enabled="true">
                <stringProp name="TestPlan.comments">	</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">memberId; cardId; memberDetailId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id; $.data.cards[0].id; $.data.attributeSets[0].[0].memberDetails[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">No_Default; No_Default; No_Default</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members (no memberDetails)" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;birthDate&quot;: &quot;2017-07-19T16:20:42.7719+00:00&quot;,&#xd;
&quot;changedBy&quot;: &quot;REST Test&quot;,&#xd;
&quot;firstName&quot;: &quot;${firstName}&quot;,&#xd;
&quot;isEmployee&quot;: false,&#xd;
&quot;lastName&quot;: &quot;${lastName}&quot;,&#xd;
&quot;memberStatus&quot;: &quot;Active&quot;,&#xd;
&quot;middleName&quot;: &quot;&quot;,&#xd;
&quot;password&quot;: &quot;Password123&amp;&quot;,&#xd;
&quot;passwordExpireDate&quot;: &quot;2017-10-17&quot;,&#xd;
&quot;preferredLanguage&quot;: &quot;en&quot;,&#xd;
&quot;zipCode&quot;: &quot;75124&quot;,&#xd;
&quot;username&quot;: &quot;${username2}&quot;,&#xd;
&quot;email&quot;: &quot;${email2}&quot;,&#xd;
&quot;alternateId&quot;: &quot;${alternateId2}&quot;,&#xd;
&quot;cards&quot;: [&#xd;
  {&#xd;
    &quot;isPrimary&quot;: true,&#xd;
    &quot;cardNumber&quot;: &quot;${cardId2}&quot;,&#xd;
    &quot;cardType&quot;: 1&#xd;
  }&#xd;
]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Member Property Extractor" enabled="true">
                <stringProp name="TestPlan.comments">	</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">memberId2; cardId2;</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id; $.data.cards[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">No_Default; No_Default</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Post member and memberdetails" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members (for attributeSet FMS)" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
&quot;birthDate&quot;: &quot;2017-07-19T16:20:42.7719+00:00&quot;,&#xd;
&quot;changedBy&quot;: &quot;REST Test&quot;,&#xd;
&quot;firstName&quot;: &quot;${firstName}&quot;,&#xd;
&quot;isEmployee&quot;: false,&#xd;
&quot;lastName&quot;: &quot;${lastName}&quot;,&#xd;
&quot;memberStatus&quot;: &quot;Active&quot;,&#xd;
&quot;middleName&quot;: &quot;&quot;,&#xd;
&quot;password&quot;: &quot;Password123&amp;&quot;,&#xd;
&quot;passwordExpireDate&quot;: &quot;2017-10-17&quot;,&#xd;
&quot;preferredLanguage&quot;: &quot;en&quot;,&#xd;
&quot;zipCode&quot;: &quot;75124&quot;,&#xd;
&quot;username&quot;: &quot;${username3}&quot;,&#xd;
&quot;email&quot;: &quot;${email3}&quot;,&#xd;
&quot;alternateId&quot;: &quot;${alternateId3}&quot;,&#xd;
&quot;cards&quot;: [&#xd;
  {&#xd;
    &quot;isPrimary&quot;: true,&#xd;
    &quot;cardNumber&quot;: &quot;${cardId3}&quot;,&#xd;
    &quot;cardType&quot;: 1&#xd;
  }&#xd;
]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Member Property Extractor" enabled="true">
                  <stringProp name="TestPlan.comments">	</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">memberId3; cardId3;</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id; $.data.cards[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">No_Default; No_Default</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/attributeSets/{attributeSetName}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
      &quot;addressLineOne&quot;: &quot;1234 Main St&quot;,&#xd;
      &quot;city&quot;: &quot;Dallas&quot;,&#xd;
      &quot;stateOrProvince&quot;: &quot;TX&quot;,&#xd;
      &quot;zipOrPostalCode&quot;: &quot;75123&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;,&#xd;
      &quot;mobilePhone&quot;: &quot;2145550010&quot;,&#xd;
      &quot;emailOptIn&quot;: true,&#xd;
      &quot;emailOptInDate&quot;: &quot;2017-11-17&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/attributeSets/memberDetails?member.alternateid=${alternateId3}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(GET) /loyalty/members/{id}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/${memberidcsv}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(PATCH) /loyalty/members/{id}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{  &#xd;
  &quot;birthDate&quot;:&quot;2017-07-19T16:20:42.7719+00:00&quot;,&#xd;
  &quot;changedBy&quot;:&quot;REST Test&quot;,&#xd;
  &quot;firstName&quot;:&quot;${firstName}&quot;,&#xd;
  &quot;isEmployee&quot;:false,&#xd;
  &quot;lastName&quot;:&quot;${lastName}&quot;,&#xd;
  &quot;memberStatus&quot;:&quot;Active&quot;,&#xd;
  &quot;middleName&quot;:&quot;&quot;,&#xd;
  &quot;password&quot;:&quot;Password123&amp;&quot;,&#xd;
  &quot;passwordExpireDate&quot;:&quot;2017-10-17&quot;,&#xd;
  &quot;preferredLanguage&quot;:&quot;en&quot;,&#xd;
  &quot;zipCode&quot;:&quot;75124&quot;,&#xd;
  &quot;username&quot;:&quot;${username}&quot;,&#xd;
  &quot;email&quot;:&quot;${email}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/${memberidcsv}</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cards/{id}/transactions" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 100.00,&#xd;
    &quot;saleAmount&quot;: 100.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1}&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${ItemId2}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 200.00,&#xd;
    &quot;saleAmount&quot;: 200.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2}&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cards/${vckeycsv}/transactions</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="1760534389">itemNumber1</stringProp>
                  <stringProp name="1760534390">itemNumber2</stringProp>
                  <stringProp name="2116183651">itemId1</stringProp>
                  <stringProp name="-514130364">ItemId2</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-1566784425">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                    <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cards/{id}/attributeSets/{attributeSetName}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
&quot;transactionType&quot;: 1,&#xd;
&quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
&quot;registerNumber&quot;: &quot;1&quot;,&#xd;
&quot;storeId&quot;: 200,&#xd;
&quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 100.00,&#xd;
    &quot;saleAmount&quot;: 100.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1}&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${ItemId2}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 200.00,&#xd;
    &quot;saleAmount&quot;: 200.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2}&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cards/${vckeycsv}/attributeSets/transactions</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="1760534389">itemNumber1</stringProp>
                  <stringProp name="1760534390">itemNumber2</stringProp>
                  <stringProp name="2116183651">itemId1</stringProp>
                  <stringProp name="-514130364">ItemId2</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-1566784425">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                    <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cardTransactions [pos1]" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290, &#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},    &#xd;
    &quot;retailAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;saleAmount&quot;: ${posSaleAmount1},&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${__Random(1,2147483648)}&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${Protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cardTransactions?card.number=${cardnumbercsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="448240793">transactionId</stringProp>
                  <stringProp name="1760534389">itemNumber1</stringProp>
                  <stringProp name="1760534390">itemNumber2</stringProp>
                  <stringProp name="2116183651">itemId1</stringProp>
                  <stringProp name="-514130364">ItemId2</stringProp>
                  <stringProp name="-1304193265">tenderId</stringProp>
                  <stringProp name="1262524332">transactionDate</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-1566784425">
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                    <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="187832203">${__UUID}</stringProp>
                    <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members/{id}/attributeSets/{attributeSetName}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
      &quot;addressLineOne&quot;: &quot;1234 Main St&quot;,&#xd;
      &quot;city&quot;: &quot;Dallas&quot;,&#xd;
      &quot;stateOrProvince&quot;: &quot;TX&quot;,&#xd;
      &quot;zipOrPostalCode&quot;: &quot;75123&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;,&#xd;
      &quot;mobilePhone&quot;: &quot;2145550010&quot;,&#xd;
      &quot;emailOptIn&quot;: true,&#xd;
      &quot;emailOptInDate&quot;: &quot;2017-11-17&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/${memberId2}/attributeSets/memberDetails</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(GET) /loyalty/members/{id}/rewards" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/${memberidcsv}/rewards</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(GET) /loyalty/memberRewards (FMS)" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/memberRewards?member.alternateid=${alternateidcsv}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members/{id}/rewardChoice" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &quot;rewardId&quot;: ${RewardId} }</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/${memberidcsv}/rewardChoice</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members/rewardChoice (FMS)" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &quot;rewardId&quot;: ${RewardId} }</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/rewardChoice?member.alternateid=${alternateidcsv}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(GET) /loyalty/members/{id}/accountSummary" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/${memberidcsv}/accountSummary</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(GET) /loyalty/members/accountSummary (FMS)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/accountSummary?member.alternateid=${alternateidcsv}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(GET) /loyalty/members/{id}/activitySummary" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/${memberidcsv}/activitySummary</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(GET) /loyalty/members/activitySummary (FMS)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
              <stringProp name="HTTPSampler.port">${Port}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/activitySummary?member.alternateid=${alternateidcsv}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Signup and Login" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /auth/signup" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;clientId&quot;: &quot;${ClientId}&quot;,&#xd;
    &quot;email&quot;: &quot;${email4}&quot;,&#xd;
    &quot;password&quot;: &quot;Password123&amp;&quot;,&#xd;
    &quot;username&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;attributeSets&quot;: [&#xd;
        {&#xd;
        &quot;memberDetails&quot;: {&#xd;
         &quot;addressLineOne&quot;: &quot;1234 Main St&quot;,&#xd;
         &quot;city&quot;: &quot;Dallas&quot;,&#xd;
         &quot;stateOrProvince&quot;: &quot;TX&quot;,&#xd;
         &quot;zipOrPostalCode&quot;: &quot;75123&quot;,&#xd;
         &quot;country&quot;: &quot;USA&quot;,&#xd;
         &quot;mobilePhone&quot;: &quot;2145550010&quot;,&#xd;
         &quot;emailOptIn&quot;: true,&#xd;
         &quot;emailOptInDate&quot;: &quot;2017-11-17&quot;&#xd;
       }&#xd;
      }&#xd;
    ]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/auth/signup</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Member Property Extractor" enabled="true">
                  <stringProp name="TestPlan.comments">	</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">memberId; cardId; memberDetailId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id; $.data.cards[0].id; $.data.attributeSets[0].[0].memberDetails[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">No_Default; No_Default; No_Default</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /auth/login" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;clientId&quot;: &quot;${ClientId}&quot;,&#xd;
    &quot;email&quot;: &quot;${email4}&quot;,&#xd;
    &quot;password&quot;: &quot;Password123&amp;&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/auth/login</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Member Property Extractor" enabled="true">
                  <stringProp name="TestPlan.comments">	</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">memberId; cardId; memberDetailId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id; $.data.cards[0].id; $.data.attributeSets[0].[0].memberDetails[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">No_Default; No_Default; No_Default</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Replace and Merge" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
&quot;birthDate&quot;: &quot;2017-07-19T16:20:42.7719+00:00&quot;,&#xd;
&quot;changedBy&quot;: &quot;REST Test&quot;,&#xd;
&quot;firstName&quot;: &quot;${firstName}&quot;,&#xd;
&quot;isEmployee&quot;: false,&#xd;
&quot;lastName&quot;: &quot;${lastName}&quot;,&#xd;
&quot;memberStatus&quot;: &quot;Active&quot;,&#xd;
&quot;middleName&quot;: &quot;&quot;,&#xd;
&quot;password&quot;: &quot;Password123&amp;&quot;,&#xd;
&quot;passwordExpireDate&quot;: &quot;2017-10-17&quot;,&#xd;
&quot;preferredLanguage&quot;: &quot;en&quot;,&#xd;
&quot;zipCode&quot;: &quot;75124&quot;,&#xd;
&quot;username&quot;: &quot;${username4}&quot;,&#xd;
&quot;email&quot;: &quot;${email4}&quot;,&#xd;
&quot;alternateId&quot;: &quot;${alternateId4}&quot;,&#xd;
&quot;cards&quot;: [&#xd;
  {&#xd;
    &quot;isPrimary&quot;: true,&#xd;
    &quot;cardNumber&quot;: &quot;${cardId4}&quot;,&#xd;
    &quot;cardType&quot;: 1&#xd;
  }&#xd;
],&#xd;
&quot;attributeSets&quot;: [&#xd;
  {&#xd;
    &quot;memberDetails&quot;: {&#xd;
      &quot;addressLineOne&quot;: &quot;1234 Main St&quot;,&#xd;
      &quot;city&quot;: &quot;Dallas&quot;,&#xd;
      &quot;stateOrProvince&quot;: &quot;TX&quot;,&#xd;
      &quot;zipOrPostalCode&quot;: &quot;75123&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;,&#xd;
      &quot;mobilePhone&quot;: &quot;2145550010&quot;,&#xd;
      &quot;emailOptIn&quot;: true,&#xd;
      &quot;emailOptInDate&quot;: &quot;2017-11-17&quot;&#xd;
    }&#xd;
  }&#xd;
]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Member Property Extractor" enabled="true">
                  <stringProp name="TestPlan.comments">	</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">memberId4; cardId4; memberDetailId4</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id; $.data.cards[0].id; $.data.attributeSets[0].[0].memberDetails[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">No_Default; No_Default; No_Default</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
&quot;birthDate&quot;: &quot;2017-07-19T16:20:42.7719+00:00&quot;,&#xd;
&quot;changedBy&quot;: &quot;REST Test&quot;,&#xd;
&quot;firstName&quot;: &quot;${firstName}&quot;,&#xd;
&quot;isEmployee&quot;: false,&#xd;
&quot;lastName&quot;: &quot;${lastName}&quot;,&#xd;
&quot;memberStatus&quot;: &quot;Active&quot;,&#xd;
&quot;middleName&quot;: &quot;&quot;,&#xd;
&quot;password&quot;: &quot;Password123&amp;&quot;,&#xd;
&quot;passwordExpireDate&quot;: &quot;2017-10-17&quot;,&#xd;
&quot;preferredLanguage&quot;: &quot;en&quot;,&#xd;
&quot;zipCode&quot;: &quot;75124&quot;,&#xd;
&quot;username&quot;: &quot;${username5}&quot;,&#xd;
&quot;email&quot;: &quot;${email5}&quot;,&#xd;
&quot;alternateId&quot;: &quot;${alternateId5}&quot;,&#xd;
&quot;cards&quot;: [&#xd;
  {&#xd;
    &quot;isPrimary&quot;: true,&#xd;
    &quot;cardNumber&quot;: &quot;${cardId5}&quot;,&#xd;
    &quot;cardType&quot;: 1&#xd;
  }&#xd;
],&#xd;
&quot;attributeSets&quot;: [&#xd;
  {&#xd;
    &quot;memberDetails&quot;: {&#xd;
      &quot;addressLineOne&quot;: &quot;1234 Main St&quot;,&#xd;
      &quot;city&quot;: &quot;Dallas&quot;,&#xd;
      &quot;stateOrProvince&quot;: &quot;TX&quot;,&#xd;
      &quot;zipOrPostalCode&quot;: &quot;75123&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;,&#xd;
      &quot;mobilePhone&quot;: &quot;2145550010&quot;,&#xd;
      &quot;emailOptIn&quot;: true,&#xd;
      &quot;emailOptInDate&quot;: &quot;2017-11-17&quot;&#xd;
    }&#xd;
  }&#xd;
]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Member Property Extractor" enabled="true">
                  <stringProp name="TestPlan.comments">	</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">memberId5; cardId5; memberDetailId5</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id; $.data.cards[0].id; $.data.attributeSets[0].[0].memberDetails[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">No_Default; No_Default; No_Default</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cards/{id}/transactions" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 100.00,&#xd;
    &quot;saleAmount&quot;: 100.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1}&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${ItemId2}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 200.00,&#xd;
    &quot;saleAmount&quot;: 200.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2}&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cards/${cardId4}/transactions</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="448240793">transactionId</stringProp>
                    <stringProp name="1760534389">itemNumber1</stringProp>
                    <stringProp name="1760534390">itemNumber2</stringProp>
                    <stringProp name="2116183651">itemId1</stringProp>
                    <stringProp name="-514130364">ItemId2</stringProp>
                    <stringProp name="-1304193265">tenderId</stringProp>
                    <stringProp name="1262524332">transactionDate</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="-1566784425">
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cards/{id}/transactions" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{ &#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
  &quot;transactionType&quot;: 1,&#xd;
  &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
  &quot;registerNumber&quot;: &quot;1&quot;,&#xd;
  &quot;storeId&quot;: 290,&#xd;
  &quot;qualifyingAmount&quot;: 100.00,&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${itemId1}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 100.00,&#xd;
    &quot;saleAmount&quot;: 100.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber1}&#xd;
    },&#xd;
    {&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    &quot;itemId&quot;: &quot;${ItemId2}&quot;,&#xd;
    &quot;productId&quot;: ${random_sim_sku},       &#xd;
    &quot;retailAmount&quot;: 200.00,&#xd;
    &quot;saleAmount&quot;: 200.00,&#xd;
    &quot;quantity&quot;: 1,&#xd;
    &quot;itemNumber&quot;:${itemNumber2}&#xd;
    }&#xd;
    ],&#xd;
  &quot;tenders&quot;: [&#xd;
    {&#xd;
    	 &quot;transactionDate&quot;: &quot;${transactionDate}&quot;,&#xd;
    	 &quot;tenderId&quot;: &quot;${tenderId}&quot;,&#xd;
    	 &quot;taxRate&quot;: 0.1,&#xd;
    	 &quot;transactionId&quot;: &quot;${transactionId}&quot;,&#xd;
    	 &quot;currency&quot;: &quot;dollars&quot;,&#xd;
    	 &quot;storeId&quot;: 290,&#xd;
    	 &quot;tenderType&quot;: ${random_tender},&#xd;
    	 &quot;taxAmount&quot;: 0.1,&#xd;
    	 &quot;amount&quot;: 300.00&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cards/${cardId4}/transactions</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="448240793">transactionId</stringProp>
                    <stringProp name="1760534389">itemNumber1</stringProp>
                    <stringProp name="1760534390">itemNumber2</stringProp>
                    <stringProp name="2116183651">itemId1</stringProp>
                    <stringProp name="-514130364">ItemId2</stringProp>
                    <stringProp name="-1304193265">tenderId</stringProp>
                    <stringProp name="1262524332">transactionDate</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="-1566784425">
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="850932976">${__time(MM-dd-yyyy HH:mm:ss)}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="SetRandomTenderAndSku" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">Random randomGenerator = new Random();
int chance = randomGenerator.nextInt(1000);
int chance2 = randomGenerator.nextInt(1000);

if(chance &lt; 200)
{
	vars.put(&quot;random_tender&quot;,&quot;123&quot;);
}
else
{
	vars.put(&quot;random_tender&quot;,&quot;1&quot;);
}

if(chance2 &lt; 100)
{
	vars.put(&quot;random_sku&quot;,&quot;7777&quot;);
}
else
{
	vars.put(&quot;random_sku&quot;,&quot;1111&quot;);
}
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/cards/{id}/replace" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;replacementCardNumber&quot;: &quot;${cardNumber}&quot;,&#xd;
    &quot;transferPoints&quot;: true,&#xd;
    &quot;effectiveDate&quot;: &quot;2018-02-23T10:00:10.0560497-06:00&quot;,&#xd;
    &quot;replaceReason&quot;: &quot;test&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/cards/${cardId4}/replace</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="508016249">cardNumber</stringProp>
                    <stringProp name="1760534389">itemNumber1</stringProp>
                    <stringProp name="1760534390">itemNumber2</stringProp>
                    <stringProp name="2116183651">itemId1</stringProp>
                    <stringProp name="-514130364">ItemId2</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="-711277479">
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(POST) /loyalty/members/merge" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${RESTURL}</stringProp>
                <stringProp name="HTTPSampler.port">${Port}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${API_Prefix}/api/v1/loyalty/members/merge?fromMember.alternateId=${alternateId4}&amp;toMember.alternateId=${alternateId5}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="508016249">cardNumber</stringProp>
                    <stringProp name="1760534389">itemNumber1</stringProp>
                    <stringProp name="1760534390">itemNumber2</stringProp>
                    <stringProp name="2116183651">itemId1</stringProp>
                    <stringProp name="-514130364">ItemId2</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="-711277479">
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="-563881910">${__Random(1,2147483648)}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                      <stringProp name="187832203">${__UUID}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">if(prev.getErrorCount()==0){
	return;
}

String oldCountAsString = props.getProperty(&quot;ERROR_COUNT&quot;);
int count = 0;
synchronized(props){
	count = Integer.parseInt(oldCountAsString) + 1;
	props.setProperty(&quot;ERROR_COUNT&quot;, Integer.toString(count));
	if(count == 500)
	{
		prev.setStopTest(true);
	}
}
</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
